/**
 * \brief defines memory mapped registers
 *
 * Generated by ipgen (Nov 17 2011 at 17:52:06) from g_pr_control.h
 * Creation date: Fri May 11 11:31:11 2012
 *
 * Copyright (C) 2012 STMicroelectronics
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 * Authors: Jean-Philippe COUSIN, STMicroelectronics (jean-philippe.cousin@st.com)
 *          Gilles PELISSIER, STMicroelectronics (gilles.pelissier@st.com)
 *
 */

#ifndef _p2012_pr_control_ipgen_regmap_h_
#define _p2012_pr_control_ipgen_regmap_h_


#ifndef _bank_WORD_TYPE_
#define _bank_WORD_TYPE_
typedef uint32_t bank_word_t;
#endif


#ifndef  HAL_MACROS_BITFIELD
#define HAL_MACROS_BITFIELD

/**
\name macro to extract bitfield
*/
#define HAL_EXTRACT_BITFIELD(regname_, fieldname_, regval_) ((regval_ & regname_ ## __ ## fieldname_ ## _FMSK) >> regname_ ## __ ## fieldname_ ## _FLOC)

/**
\name macro to build bitfield
*/
#define HAL_MAKE_BITFIELD(regname_, fieldname_, fieldval_) ((fieldval_ << regname_ ## __ ## fieldname_ ## _FLOC) & regname_ ## __ ## fieldname_ ## _FMSK)

#endif // MACROS_BITFIELD


/**
\name BANK BANK_<reg_name>
<H1> CC periph control registers </H1>
*/

#define pr_control_BANK_DESC "CC periph control registers"
/**
\name BANK_PR_CTRL_FETCH_ENABLE

Processor fetch enable
 <TABLE>
 <TR><TD><B>NAME</B></TD><TD><B>SIZE</B></TD><TD><B>OFFSET</B></TD><TD><B>EXTERNAL MODE</B></TD><TD><B>INTERNAL MODE</B></TD><TD><B>RESET VALUE</B></TD><TD><B>FIELD MASK</B></TD></TR>
 <TR><TD> BANK_PR_CTRL_FETCH_ENABLE </TD><TD> 32 </TD><TD> 0x00000000 </TD><TD> EXTERNAL_READ_WRITE </TD><TD> INTERNAL_READ_ONLY </TD><TD> 0x00000000 </TD><TD> 0xffffffff </TD></TR>
 </TABLE>

 <B> field description</B>
 <TABLE>

 <TR><TD><B>FIELD POS</B></TD><TD><B>NAME</B></TD><TD><B>DESCRIPTION</B></TD></TR>
 <TR><TD> [31:0] </TD><TD> FETCH_ENABLE </TD><TD> fetch enable   </TD></TR>
 </TABLE>
*/
// defines for register BANK_PR_CTRL_FETCH_ENABLE
#define BANK_PR_CTRL_FETCH_ENABLE_RNAM "BANK_PR_CTRL_FETCH_ENABLE"
#define BANK_PR_CTRL_FETCH_ENABLE_RDES "Processor fetch enable"
#define BANK_PR_CTRL_FETCH_ENABLE_ROFF 0x0
#define BANK_PR_CTRL_FETCH_ENABLE_RSIZ 32
#define BANK_PR_CTRL_FETCH_ENABLE_RRWM XIPM2_RW
#define BANK_PR_CTRL_FETCH_ENABLE_RRST 0x0
#define BANK_PR_CTRL_FETCH_ENABLE_RMSK 0xffffffff


// defines for field BANK_PR_CTRL_FETCH_ENABLE__FETCH_ENABLE
#define BANK_PR_CTRL_FETCH_ENABLE__FETCH_ENABLE_FNAM "BANK_PR_CTRL_FETCH_ENABLE__FETCH_ENABLE"
#define BANK_PR_CTRL_FETCH_ENABLE__FETCH_ENABLE_FDES "fetch enable  "
#define BANK_PR_CTRL_FETCH_ENABLE__FETCH_ENABLE_FLOC 0
#define BANK_PR_CTRL_FETCH_ENABLE__FETCH_ENABLE_FSIZ 32
#define BANK_PR_CTRL_FETCH_ENABLE__FETCH_ENABLE_FMSK 0xffffffff


/**
\name BANK_PR_CTRL_IT_NMI_STS

Status for processor non maskable interrupt
 <TABLE>
 <TR><TD><B>NAME</B></TD><TD><B>SIZE</B></TD><TD><B>OFFSET</B></TD><TD><B>EXTERNAL MODE</B></TD><TD><B>INTERNAL MODE</B></TD><TD><B>RESET VALUE</B></TD><TD><B>FIELD MASK</B></TD></TR>
 <TR><TD> BANK_PR_CTRL_IT_NMI_STS </TD><TD> 32 </TD><TD> 0x00000004 </TD><TD> EXTERNAL_READ_ONLY </TD><TD> INTERNAL_READ_ONLY </TD><TD> 0x00000000 </TD><TD> 0xffffffff </TD></TR>
 </TABLE>

 <B> field description</B>
 <TABLE>

 <TR><TD><B>FIELD POS</B></TD><TD><B>NAME</B></TD><TD><B>DESCRIPTION</B></TD></TR>
 <TR><TD> [31:0] </TD><TD> IT_NMI_STS </TD><TD> non maskable interrupt status   </TD></TR>
 </TABLE>
*/
// defines for register BANK_PR_CTRL_IT_NMI_STS
#define BANK_PR_CTRL_IT_NMI_STS_RNAM "BANK_PR_CTRL_IT_NMI_STS"
#define BANK_PR_CTRL_IT_NMI_STS_RDES "Status for processor non maskable interrupt"
#define BANK_PR_CTRL_IT_NMI_STS_ROFF 0x4
#define BANK_PR_CTRL_IT_NMI_STS_RSIZ 32
#define BANK_PR_CTRL_IT_NMI_STS_RRWM XIPM2_RO
#define BANK_PR_CTRL_IT_NMI_STS_RRST 0x0
#define BANK_PR_CTRL_IT_NMI_STS_RMSK 0xffffffff


// defines for field BANK_PR_CTRL_IT_NMI_STS__IT_NMI_STS
#define BANK_PR_CTRL_IT_NMI_STS__IT_NMI_STS_FNAM "BANK_PR_CTRL_IT_NMI_STS__IT_NMI_STS"
#define BANK_PR_CTRL_IT_NMI_STS__IT_NMI_STS_FDES "non maskable interrupt status  "
#define BANK_PR_CTRL_IT_NMI_STS__IT_NMI_STS_FLOC 0
#define BANK_PR_CTRL_IT_NMI_STS__IT_NMI_STS_FSIZ 32
#define BANK_PR_CTRL_IT_NMI_STS__IT_NMI_STS_FMSK 0xffffffff


/**
\name BANK_PR_CTRL_IT_NMI_BSET

Set processor non maskable interrupt
 <TABLE>
 <TR><TD><B>NAME</B></TD><TD><B>SIZE</B></TD><TD><B>OFFSET</B></TD><TD><B>EXTERNAL MODE</B></TD><TD><B>INTERNAL MODE</B></TD><TD><B>RESET VALUE</B></TD><TD><B>FIELD MASK</B></TD></TR>
 <TR><TD> BANK_PR_CTRL_IT_NMI_BSET </TD><TD> 32 </TD><TD> 0x00000008 </TD><TD> EXTERNAL_WRITE_ONLY </TD><TD> INTERNAL_READ_ONLY </TD><TD> 0x00000000 </TD><TD> 0xffffffff </TD></TR>
 </TABLE>

 <B> field description</B>
 <TABLE>

 <TR><TD><B>FIELD POS</B></TD><TD><B>NAME</B></TD><TD><B>DESCRIPTION</B></TD></TR>
 <TR><TD> [31:0] </TD><TD> IT_NMI_BSET </TD><TD> non maskable interrupt bit set (&lt;register&gt;_STS_d &lt;= &lt;register&gt;_STS_q OR &lt;register&gt;_BSET)   </TD></TR>
 </TABLE>
*/
// defines for register BANK_PR_CTRL_IT_NMI_BSET
#define BANK_PR_CTRL_IT_NMI_BSET_RNAM "BANK_PR_CTRL_IT_NMI_BSET"
#define BANK_PR_CTRL_IT_NMI_BSET_RDES "Set processor non maskable interrupt"
#define BANK_PR_CTRL_IT_NMI_BSET_ROFF 0x8
#define BANK_PR_CTRL_IT_NMI_BSET_RSIZ 32
#define BANK_PR_CTRL_IT_NMI_BSET_RRWM XIPM2_WO
#define BANK_PR_CTRL_IT_NMI_BSET_RRST 0x0
#define BANK_PR_CTRL_IT_NMI_BSET_RMSK 0xffffffff


// defines for field BANK_PR_CTRL_IT_NMI_BSET__IT_NMI_BSET
#define BANK_PR_CTRL_IT_NMI_BSET__IT_NMI_BSET_FNAM "BANK_PR_CTRL_IT_NMI_BSET__IT_NMI_BSET"
#define BANK_PR_CTRL_IT_NMI_BSET__IT_NMI_BSET_FDES "non maskable interrupt bit set (&lt;register&gt;_STS_d &lt;= &lt;register&gt;_STS_q OR &lt;register&gt;_BSET)  "
#define BANK_PR_CTRL_IT_NMI_BSET__IT_NMI_BSET_FLOC 0
#define BANK_PR_CTRL_IT_NMI_BSET__IT_NMI_BSET_FSIZ 32
#define BANK_PR_CTRL_IT_NMI_BSET__IT_NMI_BSET_FMSK 0xffffffff


/**
\name BANK_PR_CTRL_IT_NMI_BCLR

Clear processor non maskable interrupt
 <TABLE>
 <TR><TD><B>NAME</B></TD><TD><B>SIZE</B></TD><TD><B>OFFSET</B></TD><TD><B>EXTERNAL MODE</B></TD><TD><B>INTERNAL MODE</B></TD><TD><B>RESET VALUE</B></TD><TD><B>FIELD MASK</B></TD></TR>
 <TR><TD> BANK_PR_CTRL_IT_NMI_BCLR </TD><TD> 32 </TD><TD> 0x0000000c </TD><TD> EXTERNAL_WRITE_ONLY </TD><TD> INTERNAL_READ_ONLY </TD><TD> 0x00000000 </TD><TD> 0xffffffff </TD></TR>
 </TABLE>

 <B> field description</B>
 <TABLE>

 <TR><TD><B>FIELD POS</B></TD><TD><B>NAME</B></TD><TD><B>DESCRIPTION</B></TD></TR>
 <TR><TD> [31:0] </TD><TD> IT_NMI_BCLR </TD><TD> CC Processor non maskable interrupt bit clear (&lt;register&gt;_STS_d &lt;= &lt;register&gt;_STS_q AND NOT &lt;register&gt;_BSET) </TD></TR>
 </TABLE>
*/
// defines for register BANK_PR_CTRL_IT_NMI_BCLR
#define BANK_PR_CTRL_IT_NMI_BCLR_RNAM "BANK_PR_CTRL_IT_NMI_BCLR"
#define BANK_PR_CTRL_IT_NMI_BCLR_RDES "Clear processor non maskable interrupt"
#define BANK_PR_CTRL_IT_NMI_BCLR_ROFF 0xc
#define BANK_PR_CTRL_IT_NMI_BCLR_RSIZ 32
#define BANK_PR_CTRL_IT_NMI_BCLR_RRWM XIPM2_WO
#define BANK_PR_CTRL_IT_NMI_BCLR_RRST 0x0
#define BANK_PR_CTRL_IT_NMI_BCLR_RMSK 0xffffffff


// defines for field BANK_PR_CTRL_IT_NMI_BCLR__IT_NMI_BCLR
#define BANK_PR_CTRL_IT_NMI_BCLR__IT_NMI_BCLR_FNAM "BANK_PR_CTRL_IT_NMI_BCLR__IT_NMI_BCLR"
#define BANK_PR_CTRL_IT_NMI_BCLR__IT_NMI_BCLR_FDES "CC Processor non maskable interrupt bit clear (&lt;register&gt;_STS_d &lt;= &lt;register&gt;_STS_q AND NOT &lt;register&gt;_BSET)"
#define BANK_PR_CTRL_IT_NMI_BCLR__IT_NMI_BCLR_FLOC 0
#define BANK_PR_CTRL_IT_NMI_BCLR__IT_NMI_BCLR_FSIZ 32
#define BANK_PR_CTRL_IT_NMI_BCLR__IT_NMI_BCLR_FMSK 0xffffffff


/**
\name BANK_PR_CTRL_SOFT_RESET

Processor soft reset
 <TABLE>
 <TR><TD><B>NAME</B></TD><TD><B>SIZE</B></TD><TD><B>OFFSET</B></TD><TD><B>EXTERNAL MODE</B></TD><TD><B>INTERNAL MODE</B></TD><TD><B>RESET VALUE</B></TD><TD><B>FIELD MASK</B></TD></TR>
 <TR><TD> BANK_PR_CTRL_SOFT_RESET </TD><TD> 32 </TD><TD> 0x00000010 </TD><TD> EXTERNAL_READ_WRITE </TD><TD> INTERNAL_READ_ONLY </TD><TD> 0xffffffff </TD><TD> 0xffffffff </TD></TR>
 </TABLE>

 <B> field description</B>
 <TABLE>

 <TR><TD><B>FIELD POS</B></TD><TD><B>NAME</B></TD><TD><B>DESCRIPTION</B></TD></TR>
 <TR><TD> [31:0] </TD><TD> SOFT_RESET </TD><TD> Processor soft reset </TD></TR>
 </TABLE>
*/
// defines for register BANK_PR_CTRL_SOFT_RESET
#define BANK_PR_CTRL_SOFT_RESET_RNAM "BANK_PR_CTRL_SOFT_RESET"
#define BANK_PR_CTRL_SOFT_RESET_RDES "Processor soft reset"
#define BANK_PR_CTRL_SOFT_RESET_ROFF 0x10
#define BANK_PR_CTRL_SOFT_RESET_RSIZ 32
#define BANK_PR_CTRL_SOFT_RESET_RRWM XIPM2_RW
#define BANK_PR_CTRL_SOFT_RESET_RRST 0xffffffff
#define BANK_PR_CTRL_SOFT_RESET_RMSK 0xffffffff


// defines for field BANK_PR_CTRL_SOFT_RESET__SOFT_RESET
#define BANK_PR_CTRL_SOFT_RESET__SOFT_RESET_FNAM "BANK_PR_CTRL_SOFT_RESET__SOFT_RESET"
#define BANK_PR_CTRL_SOFT_RESET__SOFT_RESET_FDES "Processor soft reset"
#define BANK_PR_CTRL_SOFT_RESET__SOFT_RESET_FLOC 0
#define BANK_PR_CTRL_SOFT_RESET__SOFT_RESET_FSIZ 32
#define BANK_PR_CTRL_SOFT_RESET__SOFT_RESET_FMSK 0xffffffff


/**
\name BANK_PR_CTRL_BOOT_ADDRESS

Processor boot address
 <TABLE>
 <TR><TD><B>NAME</B></TD><TD><B>SIZE</B></TD><TD><B>OFFSET</B></TD><TD><B>EXTERNAL MODE</B></TD><TD><B>INTERNAL MODE</B></TD><TD><B>RESET VALUE</B></TD><TD><B>FIELD MASK</B></TD></TR>
 <TR><TD> BANK_PR_CTRL_BOOT_ADDRESS </TD><TD> 32 </TD><TD> 0x00000014 </TD><TD> EXTERNAL_READ_WRITE </TD><TD> INTERNAL_READ_ONLY </TD><TD> 0x00000000 </TD><TD> 0xffffff00 </TD></TR>
 </TABLE>

 <B> field description</B>
 <TABLE>

 <TR><TD><B>FIELD POS</B></TD><TD><B>NAME</B></TD><TD><B>DESCRIPTION</B></TD></TR>
 <TR><TD> [31:8] </TD><TD> BOOT_ADDRESS </TD><TD> MSBs of the boot address of all processors </TD></TR>
 </TABLE>
*/
// defines for register BANK_PR_CTRL_BOOT_ADDRESS
#define BANK_PR_CTRL_BOOT_ADDRESS_RNAM "BANK_PR_CTRL_BOOT_ADDRESS"
#define BANK_PR_CTRL_BOOT_ADDRESS_RDES "Processor boot address"
#define BANK_PR_CTRL_BOOT_ADDRESS_ROFF 0x14
#define BANK_PR_CTRL_BOOT_ADDRESS_RSIZ 32
#define BANK_PR_CTRL_BOOT_ADDRESS_RRWM XIPM2_RW
#define BANK_PR_CTRL_BOOT_ADDRESS_RRST 0x0
#define BANK_PR_CTRL_BOOT_ADDRESS_RMSK 0xffffff00


// defines for field BANK_PR_CTRL_BOOT_ADDRESS__BOOT_ADDRESS
#define BANK_PR_CTRL_BOOT_ADDRESS__BOOT_ADDRESS_FNAM "BANK_PR_CTRL_BOOT_ADDRESS__BOOT_ADDRESS"
#define BANK_PR_CTRL_BOOT_ADDRESS__BOOT_ADDRESS_FDES "MSBs of the boot address of all processors"
#define BANK_PR_CTRL_BOOT_ADDRESS__BOOT_ADDRESS_FLOC 8
#define BANK_PR_CTRL_BOOT_ADDRESS__BOOT_ADDRESS_FSIZ 24
#define BANK_PR_CTRL_BOOT_ADDRESS__BOOT_ADDRESS_FMSK 0xffffff00


/**
\name BANK_PR_CTRL_IT_HOST

IT to host processor generation
 <TABLE>
 <TR><TD><B>NAME</B></TD><TD><B>SIZE</B></TD><TD><B>OFFSET</B></TD><TD><B>EXTERNAL MODE</B></TD><TD><B>INTERNAL MODE</B></TD><TD><B>RESET VALUE</B></TD><TD><B>FIELD MASK</B></TD></TR>
 <TR><TD> BANK_PR_CTRL_IT_HOST </TD><TD> 32 </TD><TD> 0x00000018 </TD><TD> EXTERNAL_READ_WRITE </TD><TD> INTERNAL_READ_ONLY </TD><TD> 0x00000000 </TD><TD> 0x00000001 </TD></TR>
 </TABLE>

 <B> field description</B>
 <TABLE>

 <TR><TD><B>FIELD POS</B></TD><TD><B>NAME</B></TD><TD><B>DESCRIPTION</B></TD></TR>
 <TR><TD> [0:0] </TD><TD> IT_HOST </TD><TD> IT to the host processor. It is a software-acknowledged signal, not a pulse. </TD></TR>
 </TABLE>
<H2> default enumeration for BANK_PR_CTRL_IT_HOST__IT_HOST </H2>

 <TABLE>
 <TR><TD><B>NAME</B></TD><TD><B>VALUE</B></TD><TD><B>DESCRIPTION</B></TD></TR>
 <TR><TD>BANK_PR_CTRL_IT_HOST__IT_HOST_ON</TD><TD>1</TD><TD>on value</TD></TR>
 <TR><TD>BANK_PR_CTRL_IT_HOST__IT_HOST_OFF</TD><TD>0</TD><TD>off value</TD></TR>
 </TABLE>
*/
// defines for register BANK_PR_CTRL_IT_HOST
#define BANK_PR_CTRL_IT_HOST_RNAM "BANK_PR_CTRL_IT_HOST"
#define BANK_PR_CTRL_IT_HOST_RDES "IT to host processor generation"
#define BANK_PR_CTRL_IT_HOST_ROFF 0x18
#define BANK_PR_CTRL_IT_HOST_RSIZ 32
#define BANK_PR_CTRL_IT_HOST_RRWM XIPM2_RW
#define BANK_PR_CTRL_IT_HOST_RRST 0x0
#define BANK_PR_CTRL_IT_HOST_RMSK 0x1


// defines for field BANK_PR_CTRL_IT_HOST__IT_HOST
#define BANK_PR_CTRL_IT_HOST__IT_HOST_FNAM "BANK_PR_CTRL_IT_HOST__IT_HOST"
#define BANK_PR_CTRL_IT_HOST__IT_HOST_FDES "IT to the host processor. It is a software-acknowledged signal, not a pulse."
#define BANK_PR_CTRL_IT_HOST__IT_HOST_FLOC 0
#define BANK_PR_CTRL_IT_HOST__IT_HOST_FSIZ 1
#define BANK_PR_CTRL_IT_HOST__IT_HOST_FMSK 0x1


// default enum for BANK_PR_CTRL_IT_HOST__IT_HOST
#define BANK_PR_CTRL_IT_HOST__IT_HOST_ON  1
#define BANK_PR_CTRL_IT_HOST__IT_HOST_OFF 0
/**
\name BANK_PR_CTRL_ERROR_STS

Error status
 <TABLE>
 <TR><TD><B>NAME</B></TD><TD><B>SIZE</B></TD><TD><B>OFFSET</B></TD><TD><B>EXTERNAL MODE</B></TD><TD><B>INTERNAL MODE</B></TD><TD><B>RESET VALUE</B></TD><TD><B>FIELD MASK</B></TD></TR>
 <TR><TD> BANK_PR_CTRL_ERROR_STS </TD><TD> 32 </TD><TD> 0x0000001c </TD><TD> EXTERNAL_READ_ONLY </TD><TD> INTERNAL_READ_WRITE </TD><TD> 0x00000000 </TD><TD> 0xffffffff </TD></TR>
 </TABLE>

 <B> field description</B>
 <TABLE>

 <TR><TD><B>FIELD POS</B></TD><TD><B>NAME</B></TD><TD><B>DESCRIPTION</B></TD></TR>
 <TR><TD> [31:0] </TD><TD> ERROR_STS </TD><TD> Error status </TD></TR>
 </TABLE>
*/
// defines for register BANK_PR_CTRL_ERROR_STS
#define BANK_PR_CTRL_ERROR_STS_RNAM "BANK_PR_CTRL_ERROR_STS"
#define BANK_PR_CTRL_ERROR_STS_RDES "Error status"
#define BANK_PR_CTRL_ERROR_STS_ROFF 0x1c
#define BANK_PR_CTRL_ERROR_STS_RSIZ 32
#define BANK_PR_CTRL_ERROR_STS_RRWM XIPM2_RO
#define BANK_PR_CTRL_ERROR_STS_RRST 0x0
#define BANK_PR_CTRL_ERROR_STS_RMSK 0xffffffff


// defines for field BANK_PR_CTRL_ERROR_STS__ERROR_STS
#define BANK_PR_CTRL_ERROR_STS__ERROR_STS_FNAM "BANK_PR_CTRL_ERROR_STS__ERROR_STS"
#define BANK_PR_CTRL_ERROR_STS__ERROR_STS_FDES "Error status"
#define BANK_PR_CTRL_ERROR_STS__ERROR_STS_FLOC 0
#define BANK_PR_CTRL_ERROR_STS__ERROR_STS_FSIZ 32
#define BANK_PR_CTRL_ERROR_STS__ERROR_STS_FMSK 0xffffffff


/**
\name BANK_PR_CTRL_ERROR_BSET

Set bit in error status
 <TABLE>
 <TR><TD><B>NAME</B></TD><TD><B>SIZE</B></TD><TD><B>OFFSET</B></TD><TD><B>EXTERNAL MODE</B></TD><TD><B>INTERNAL MODE</B></TD><TD><B>RESET VALUE</B></TD><TD><B>FIELD MASK</B></TD></TR>
 <TR><TD> BANK_PR_CTRL_ERROR_BSET </TD><TD> 32 </TD><TD> 0x00000020 </TD><TD> EXTERNAL_WRITE_ONLY </TD><TD> INTERNAL_READ_ONLY </TD><TD> 0x00000000 </TD><TD> 0xffffffff </TD></TR>
 </TABLE>

 <B> field description</B>
 <TABLE>

 <TR><TD><B>FIELD POS</B></TD><TD><B>NAME</B></TD><TD><B>DESCRIPTION</B></TD></TR>
 <TR><TD> [31:0] </TD><TD> ERROR_BSET </TD><TD> Error bit set </TD></TR>
 </TABLE>
*/
// defines for register BANK_PR_CTRL_ERROR_BSET
#define BANK_PR_CTRL_ERROR_BSET_RNAM "BANK_PR_CTRL_ERROR_BSET"
#define BANK_PR_CTRL_ERROR_BSET_RDES "Set bit in error status"
#define BANK_PR_CTRL_ERROR_BSET_ROFF 0x20
#define BANK_PR_CTRL_ERROR_BSET_RSIZ 32
#define BANK_PR_CTRL_ERROR_BSET_RRWM XIPM2_WO
#define BANK_PR_CTRL_ERROR_BSET_RRST 0x0
#define BANK_PR_CTRL_ERROR_BSET_RMSK 0xffffffff


// defines for field BANK_PR_CTRL_ERROR_BSET__ERROR_BSET
#define BANK_PR_CTRL_ERROR_BSET__ERROR_BSET_FNAM "BANK_PR_CTRL_ERROR_BSET__ERROR_BSET"
#define BANK_PR_CTRL_ERROR_BSET__ERROR_BSET_FDES "Error bit set"
#define BANK_PR_CTRL_ERROR_BSET__ERROR_BSET_FLOC 0
#define BANK_PR_CTRL_ERROR_BSET__ERROR_BSET_FSIZ 32
#define BANK_PR_CTRL_ERROR_BSET__ERROR_BSET_FMSK 0xffffffff


/**
\name BANK_PR_CTRL_ERROR_BCLR

Clear bit in error status
 <TABLE>
 <TR><TD><B>NAME</B></TD><TD><B>SIZE</B></TD><TD><B>OFFSET</B></TD><TD><B>EXTERNAL MODE</B></TD><TD><B>INTERNAL MODE</B></TD><TD><B>RESET VALUE</B></TD><TD><B>FIELD MASK</B></TD></TR>
 <TR><TD> BANK_PR_CTRL_ERROR_BCLR </TD><TD> 32 </TD><TD> 0x00000024 </TD><TD> EXTERNAL_WRITE_ONLY </TD><TD> INTERNAL_READ_ONLY </TD><TD> 0x00000000 </TD><TD> 0xffffffff </TD></TR>
 </TABLE>

 <B> field description</B>
 <TABLE>

 <TR><TD><B>FIELD POS</B></TD><TD><B>NAME</B></TD><TD><B>DESCRIPTION</B></TD></TR>
 <TR><TD> [31:0] </TD><TD> ERROR_BCLR </TD><TD> Error bit clear </TD></TR>
 </TABLE>
*/
// defines for register BANK_PR_CTRL_ERROR_BCLR
#define BANK_PR_CTRL_ERROR_BCLR_RNAM "BANK_PR_CTRL_ERROR_BCLR"
#define BANK_PR_CTRL_ERROR_BCLR_RDES "Clear bit in error status"
#define BANK_PR_CTRL_ERROR_BCLR_ROFF 0x24
#define BANK_PR_CTRL_ERROR_BCLR_RSIZ 32
#define BANK_PR_CTRL_ERROR_BCLR_RRWM XIPM2_WO
#define BANK_PR_CTRL_ERROR_BCLR_RRST 0x0
#define BANK_PR_CTRL_ERROR_BCLR_RMSK 0xffffffff


// defines for field BANK_PR_CTRL_ERROR_BCLR__ERROR_BCLR
#define BANK_PR_CTRL_ERROR_BCLR__ERROR_BCLR_FNAM "BANK_PR_CTRL_ERROR_BCLR__ERROR_BCLR"
#define BANK_PR_CTRL_ERROR_BCLR__ERROR_BCLR_FDES "Error bit clear"
#define BANK_PR_CTRL_ERROR_BCLR__ERROR_BCLR_FLOC 0
#define BANK_PR_CTRL_ERROR_BCLR__ERROR_BCLR_FSIZ 32
#define BANK_PR_CTRL_ERROR_BCLR__ERROR_BCLR_FMSK 0xffffffff


/**
\name BANK_PR_CTRL_IT_HOST_ERROR_MASK

Mask for IT error on host processor
 <TABLE>
 <TR><TD><B>NAME</B></TD><TD><B>SIZE</B></TD><TD><B>OFFSET</B></TD><TD><B>EXTERNAL MODE</B></TD><TD><B>INTERNAL MODE</B></TD><TD><B>RESET VALUE</B></TD><TD><B>FIELD MASK</B></TD></TR>
 <TR><TD> BANK_PR_CTRL_IT_HOST_ERROR_MASK </TD><TD> 32 </TD><TD> 0x00000028 </TD><TD> EXTERNAL_READ_WRITE </TD><TD> INTERNAL_READ_ONLY </TD><TD> 0x00000000 </TD><TD> 0xffffffff </TD></TR>
 </TABLE>

 <B> field description</B>
 <TABLE>

 <TR><TD><B>FIELD POS</B></TD><TD><B>NAME</B></TD><TD><B>DESCRIPTION</B></TD></TR>
 <TR><TD> [31:0] </TD><TD> IT_HOST_ERROR_MASK </TD><TD> mask errors for host processor </TD></TR>
 </TABLE>
*/
// defines for register BANK_PR_CTRL_IT_HOST_ERROR_MASK
#define BANK_PR_CTRL_IT_HOST_ERROR_MASK_RNAM "BANK_PR_CTRL_IT_HOST_ERROR_MASK"
#define BANK_PR_CTRL_IT_HOST_ERROR_MASK_RDES "Mask for IT error on host processor"
#define BANK_PR_CTRL_IT_HOST_ERROR_MASK_ROFF 0x28
#define BANK_PR_CTRL_IT_HOST_ERROR_MASK_RSIZ 32
#define BANK_PR_CTRL_IT_HOST_ERROR_MASK_RRWM XIPM2_RW
#define BANK_PR_CTRL_IT_HOST_ERROR_MASK_RRST 0x0
#define BANK_PR_CTRL_IT_HOST_ERROR_MASK_RMSK 0xffffffff


// defines for field BANK_PR_CTRL_IT_HOST_ERROR_MASK__IT_HOST_ERROR_MASK
#define BANK_PR_CTRL_IT_HOST_ERROR_MASK__IT_HOST_ERROR_MASK_FNAM "BANK_PR_CTRL_IT_HOST_ERROR_MASK__IT_HOST_ERROR_MASK"
#define BANK_PR_CTRL_IT_HOST_ERROR_MASK__IT_HOST_ERROR_MASK_FDES "mask errors for host processor"
#define BANK_PR_CTRL_IT_HOST_ERROR_MASK__IT_HOST_ERROR_MASK_FLOC 0
#define BANK_PR_CTRL_IT_HOST_ERROR_MASK__IT_HOST_ERROR_MASK_FSIZ 32
#define BANK_PR_CTRL_IT_HOST_ERROR_MASK__IT_HOST_ERROR_MASK_FMSK 0xffffffff


/**
\name BANK_PR_CTRL_IT_LOCAL_ERROR_MASK

Mask for IT error on local processor
 <TABLE>
 <TR><TD><B>NAME</B></TD><TD><B>SIZE</B></TD><TD><B>OFFSET</B></TD><TD><B>EXTERNAL MODE</B></TD><TD><B>INTERNAL MODE</B></TD><TD><B>RESET VALUE</B></TD><TD><B>FIELD MASK</B></TD></TR>
 <TR><TD> BANK_PR_CTRL_IT_LOCAL_ERROR_MASK </TD><TD> 32 </TD><TD> 0x0000002c </TD><TD> EXTERNAL_READ_WRITE </TD><TD> INTERNAL_READ_ONLY </TD><TD> 0x00000000 </TD><TD> 0xffffffff </TD></TR>
 </TABLE>

 <B> field description</B>
 <TABLE>

 <TR><TD><B>FIELD POS</B></TD><TD><B>NAME</B></TD><TD><B>DESCRIPTION</B></TD></TR>
 <TR><TD> [31:0] </TD><TD> IT_LOCAL_ERROR_MASK </TD><TD> mask errors for local processor </TD></TR>
 </TABLE>
*/
// defines for register BANK_PR_CTRL_IT_LOCAL_ERROR_MASK
#define BANK_PR_CTRL_IT_LOCAL_ERROR_MASK_RNAM "BANK_PR_CTRL_IT_LOCAL_ERROR_MASK"
#define BANK_PR_CTRL_IT_LOCAL_ERROR_MASK_RDES "Mask for IT error on local processor"
#define BANK_PR_CTRL_IT_LOCAL_ERROR_MASK_ROFF 0x2c
#define BANK_PR_CTRL_IT_LOCAL_ERROR_MASK_RSIZ 32
#define BANK_PR_CTRL_IT_LOCAL_ERROR_MASK_RRWM XIPM2_RW
#define BANK_PR_CTRL_IT_LOCAL_ERROR_MASK_RRST 0x0
#define BANK_PR_CTRL_IT_LOCAL_ERROR_MASK_RMSK 0xffffffff


// defines for field BANK_PR_CTRL_IT_LOCAL_ERROR_MASK__IT_LOCAL_ERROR_MASK
#define BANK_PR_CTRL_IT_LOCAL_ERROR_MASK__IT_LOCAL_ERROR_MASK_FNAM "BANK_PR_CTRL_IT_LOCAL_ERROR_MASK__IT_LOCAL_ERROR_MASK"
#define BANK_PR_CTRL_IT_LOCAL_ERROR_MASK__IT_LOCAL_ERROR_MASK_FDES "mask errors for local processor"
#define BANK_PR_CTRL_IT_LOCAL_ERROR_MASK__IT_LOCAL_ERROR_MASK_FLOC 0
#define BANK_PR_CTRL_IT_LOCAL_ERROR_MASK__IT_LOCAL_ERROR_MASK_FSIZ 32
#define BANK_PR_CTRL_IT_LOCAL_ERROR_MASK__IT_LOCAL_ERROR_MASK_FMSK 0xffffffff


/**
\name BANK_PR_CTRL_CFG

Processor configuration
 <TABLE>
 <TR><TD><B>NAME</B></TD><TD><B>SIZE</B></TD><TD><B>OFFSET</B></TD><TD><B>EXTERNAL MODE</B></TD><TD><B>INTERNAL MODE</B></TD><TD><B>RESET VALUE</B></TD><TD><B>FIELD MASK</B></TD></TR>
 <TR><TD> BANK_PR_CTRL_CFG </TD><TD> 32 </TD><TD> 0x00000030 </TD><TD> EXTERNAL_WRITE_ONLY </TD><TD> INTERNAL_READ_ONLY </TD><TD> 0x00000000 </TD><TD> 0x00000001 </TD></TR>
 </TABLE>

 <B> field description</B>
 <TABLE>

 <TR><TD><B>FIELD POS</B></TD><TD><B>NAME</B></TD><TD><B>DESCRIPTION</B></TD></TR>
 <TR><TD> [0:0] </TD><TD> DTU_DBG_EN </TD><TD> Set the configuration register bit associated with the JTAG security feature. Uses to drive the topdbgen input of the DTU. By default, JTAG access to the STxP70 should not be permitted. </TD></TR>
 </TABLE>
<H2> default enumeration for BANK_PR_CTRL_CFG__DTU_DBG_EN </H2>

 <TABLE>
 <TR><TD><B>NAME</B></TD><TD><B>VALUE</B></TD><TD><B>DESCRIPTION</B></TD></TR>
 <TR><TD>BANK_PR_CTRL_CFG__DTU_DBG_EN_ON</TD><TD>1</TD><TD>on value</TD></TR>
 <TR><TD>BANK_PR_CTRL_CFG__DTU_DBG_EN_OFF</TD><TD>0</TD><TD>off value</TD></TR>
 </TABLE>
*/
// defines for register BANK_PR_CTRL_CFG
#define BANK_PR_CTRL_CFG_RNAM "BANK_PR_CTRL_CFG"
#define BANK_PR_CTRL_CFG_RDES "Processor configuration"
#define BANK_PR_CTRL_CFG_ROFF 0x30
#define BANK_PR_CTRL_CFG_RSIZ 32
#define BANK_PR_CTRL_CFG_RRWM XIPM2_WO
#define BANK_PR_CTRL_CFG_RRST 0x0
#define BANK_PR_CTRL_CFG_RMSK 0x1


// defines for field BANK_PR_CTRL_CFG__DTU_DBG_EN
#define BANK_PR_CTRL_CFG__DTU_DBG_EN_FNAM "BANK_PR_CTRL_CFG__DTU_DBG_EN"
#define BANK_PR_CTRL_CFG__DTU_DBG_EN_FDES "Set the configuration register bit associated with the JTAG security feature. Uses to drive the topdbgen input of the DTU. By default, JTAG access to the STxP70 should not be permitted."
#define BANK_PR_CTRL_CFG__DTU_DBG_EN_FLOC 0
#define BANK_PR_CTRL_CFG__DTU_DBG_EN_FSIZ 1
#define BANK_PR_CTRL_CFG__DTU_DBG_EN_FMSK 0x1


// default enum for BANK_PR_CTRL_CFG__DTU_DBG_EN
#define BANK_PR_CTRL_CFG__DTU_DBG_EN_ON  1
#define BANK_PR_CTRL_CFG__DTU_DBG_EN_OFF 0
/**
\name BANK_PR_COMB_ITAND_STATUS_STS

Interrupt AND combining status
 <TABLE>
 <TR><TD><B>NAME</B></TD><TD><B>SIZE</B></TD><TD><B>OFFSET</B></TD><TD><B>EXTERNAL MODE</B></TD><TD><B>INTERNAL MODE</B></TD><TD><B>RESET VALUE</B></TD><TD><B>FIELD MASK</B></TD></TR>
 <TR><TD> BANK_PR_COMB_ITAND_STATUS_STS </TD><TD> 32 </TD><TD> 0x00001000 </TD><TD> EXTERNAL_READ_ONLY </TD><TD> INTERNAL_READ_WRITE </TD><TD> 0x00000000 </TD><TD> 0xffffffff </TD></TR>
 </TABLE>

 <B> field description</B>
 <TABLE>

 <TR><TD><B>FIELD POS</B></TD><TD><B>NAME</B></TD><TD><B>DESCRIPTION</B></TD></TR>
 <TR><TD> [31:0] </TD><TD> IT_LINES_STATUS </TD><TD> interrupt lines status </TD></TR>
 </TABLE>
*/
// defines for register BANK_PR_COMB_ITAND_STATUS_STS
#define BANK_PR_COMB_ITAND_STATUS_STS_RNAM "BANK_PR_COMB_ITAND_STATUS_STS"
#define BANK_PR_COMB_ITAND_STATUS_STS_RDES "Interrupt AND combining status"
#define BANK_PR_COMB_ITAND_STATUS_STS_ROFF 0x1000
#define BANK_PR_COMB_ITAND_STATUS_STS_RSIZ 32
#define BANK_PR_COMB_ITAND_STATUS_STS_RRWM XIPM2_RO
#define BANK_PR_COMB_ITAND_STATUS_STS_RRST 0x0
#define BANK_PR_COMB_ITAND_STATUS_STS_RMSK 0xffffffff


// defines for field BANK_PR_COMB_ITAND_STATUS_STS__IT_LINES_STATUS
#define BANK_PR_COMB_ITAND_STATUS_STS__IT_LINES_STATUS_FNAM "BANK_PR_COMB_ITAND_STATUS_STS__IT_LINES_STATUS"
#define BANK_PR_COMB_ITAND_STATUS_STS__IT_LINES_STATUS_FDES "interrupt lines status"
#define BANK_PR_COMB_ITAND_STATUS_STS__IT_LINES_STATUS_FLOC 0
#define BANK_PR_COMB_ITAND_STATUS_STS__IT_LINES_STATUS_FSIZ 32
#define BANK_PR_COMB_ITAND_STATUS_STS__IT_LINES_STATUS_FMSK 0xffffffff


/**
\name BANK_PR_COMB_ITAND_STATUS_BSET

Set bit into PR_COMB_ITAND_STATUS_STS
 <TABLE>
 <TR><TD><B>NAME</B></TD><TD><B>SIZE</B></TD><TD><B>OFFSET</B></TD><TD><B>EXTERNAL MODE</B></TD><TD><B>INTERNAL MODE</B></TD><TD><B>RESET VALUE</B></TD><TD><B>FIELD MASK</B></TD></TR>
 <TR><TD> BANK_PR_COMB_ITAND_STATUS_BSET </TD><TD> 32 </TD><TD> 0x00001004 </TD><TD> EXTERNAL_WRITE_ONLY </TD><TD> INTERNAL_READ_ONLY </TD><TD> 0x00000000 </TD><TD> 0xffffffff </TD></TR>
 </TABLE>

 <B> field description</B>
 <TABLE>

 <TR><TD><B>FIELD POS</B></TD><TD><B>NAME</B></TD><TD><B>DESCRIPTION</B></TD></TR>
 <TR><TD> [31:0] </TD><TD> IT_LINES_SET </TD><TD> set bit in (register)_STS </TD></TR>
 </TABLE>
*/
// defines for register BANK_PR_COMB_ITAND_STATUS_BSET
#define BANK_PR_COMB_ITAND_STATUS_BSET_RNAM "BANK_PR_COMB_ITAND_STATUS_BSET"
#define BANK_PR_COMB_ITAND_STATUS_BSET_RDES "Set bit into PR_COMB_ITAND_STATUS_STS"
#define BANK_PR_COMB_ITAND_STATUS_BSET_ROFF 0x1004
#define BANK_PR_COMB_ITAND_STATUS_BSET_RSIZ 32
#define BANK_PR_COMB_ITAND_STATUS_BSET_RRWM XIPM2_WO
#define BANK_PR_COMB_ITAND_STATUS_BSET_RRST 0x0
#define BANK_PR_COMB_ITAND_STATUS_BSET_RMSK 0xffffffff


// defines for field BANK_PR_COMB_ITAND_STATUS_BSET__IT_LINES_SET
#define BANK_PR_COMB_ITAND_STATUS_BSET__IT_LINES_SET_FNAM "BANK_PR_COMB_ITAND_STATUS_BSET__IT_LINES_SET"
#define BANK_PR_COMB_ITAND_STATUS_BSET__IT_LINES_SET_FDES "set bit in (register)_STS"
#define BANK_PR_COMB_ITAND_STATUS_BSET__IT_LINES_SET_FLOC 0
#define BANK_PR_COMB_ITAND_STATUS_BSET__IT_LINES_SET_FSIZ 32
#define BANK_PR_COMB_ITAND_STATUS_BSET__IT_LINES_SET_FMSK 0xffffffff


/**
\name BANK_PR_COMB_ITAND_STATUS_BCLR

Clear bit into PR_COMB_ITAND_STATUS_STS
 <TABLE>
 <TR><TD><B>NAME</B></TD><TD><B>SIZE</B></TD><TD><B>OFFSET</B></TD><TD><B>EXTERNAL MODE</B></TD><TD><B>INTERNAL MODE</B></TD><TD><B>RESET VALUE</B></TD><TD><B>FIELD MASK</B></TD></TR>
 <TR><TD> BANK_PR_COMB_ITAND_STATUS_BCLR </TD><TD> 32 </TD><TD> 0x00001008 </TD><TD> EXTERNAL_WRITE_ONLY </TD><TD> INTERNAL_READ_ONLY </TD><TD> 0x00000000 </TD><TD> 0xffffffff </TD></TR>
 </TABLE>

 <B> field description</B>
 <TABLE>

 <TR><TD><B>FIELD POS</B></TD><TD><B>NAME</B></TD><TD><B>DESCRIPTION</B></TD></TR>
 <TR><TD> [31:0] </TD><TD> IT_LINES_CLEAR </TD><TD> clear bit in (register)_STS </TD></TR>
 </TABLE>
*/
// defines for register BANK_PR_COMB_ITAND_STATUS_BCLR
#define BANK_PR_COMB_ITAND_STATUS_BCLR_RNAM "BANK_PR_COMB_ITAND_STATUS_BCLR"
#define BANK_PR_COMB_ITAND_STATUS_BCLR_RDES "Clear bit into PR_COMB_ITAND_STATUS_STS"
#define BANK_PR_COMB_ITAND_STATUS_BCLR_ROFF 0x1008
#define BANK_PR_COMB_ITAND_STATUS_BCLR_RSIZ 32
#define BANK_PR_COMB_ITAND_STATUS_BCLR_RRWM XIPM2_WO
#define BANK_PR_COMB_ITAND_STATUS_BCLR_RRST 0x0
#define BANK_PR_COMB_ITAND_STATUS_BCLR_RMSK 0xffffffff


// defines for field BANK_PR_COMB_ITAND_STATUS_BCLR__IT_LINES_CLEAR
#define BANK_PR_COMB_ITAND_STATUS_BCLR__IT_LINES_CLEAR_FNAM "BANK_PR_COMB_ITAND_STATUS_BCLR__IT_LINES_CLEAR"
#define BANK_PR_COMB_ITAND_STATUS_BCLR__IT_LINES_CLEAR_FDES "clear bit in (register)_STS"
#define BANK_PR_COMB_ITAND_STATUS_BCLR__IT_LINES_CLEAR_FLOC 0
#define BANK_PR_COMB_ITAND_STATUS_BCLR__IT_LINES_CLEAR_FSIZ 32
#define BANK_PR_COMB_ITAND_STATUS_BCLR__IT_LINES_CLEAR_FMSK 0xffffffff


/**
\name BANK_PR_COMB_ITAND_MASK0

Mask bits in PR_COMB_ITAND_STATUS_STS
 <TABLE>
 <TR><TD><B>NAME</B></TD><TD><B>SIZE</B></TD><TD><B>OFFSET</B></TD><TD><B>EXTERNAL MODE</B></TD><TD><B>INTERNAL MODE</B></TD><TD><B>RESET VALUE</B></TD><TD><B>FIELD MASK</B></TD></TR>
 <TR><TD> BANK_PR_COMB_ITAND_MASK0 </TD><TD> 32 </TD><TD> 0x0000100c </TD><TD> EXTERNAL_READ_WRITE </TD><TD> INTERNAL_READ_ONLY </TD><TD> 0x00000000 </TD><TD> 0xffffffff </TD></TR>
 </TABLE>

 <B> field description</B>
 <TABLE>

 <TR><TD><B>FIELD POS</B></TD><TD><B>NAME</B></TD><TD><B>DESCRIPTION</B></TD></TR>
 <TR><TD> [31:0] </TD><TD> IT_LINES_MASK </TD><TD> mask bit into (register)_STS </TD></TR>
 </TABLE>
*/
// defines for register BANK_PR_COMB_ITAND_MASK0
#define BANK_PR_COMB_ITAND_MASK0_RNAM "BANK_PR_COMB_ITAND_MASK0"
#define BANK_PR_COMB_ITAND_MASK0_RDES "Mask bits in PR_COMB_ITAND_STATUS_STS"
#define BANK_PR_COMB_ITAND_MASK0_ROFF 0x100c
#define BANK_PR_COMB_ITAND_MASK0_RSIZ 32
#define BANK_PR_COMB_ITAND_MASK0_RRWM XIPM2_RW
#define BANK_PR_COMB_ITAND_MASK0_RRST 0x0
#define BANK_PR_COMB_ITAND_MASK0_RMSK 0xffffffff


// defines for field BANK_PR_COMB_ITAND_MASK0__IT_LINES_MASK
#define BANK_PR_COMB_ITAND_MASK0__IT_LINES_MASK_FNAM "BANK_PR_COMB_ITAND_MASK0__IT_LINES_MASK"
#define BANK_PR_COMB_ITAND_MASK0__IT_LINES_MASK_FDES "mask bit into (register)_STS"
#define BANK_PR_COMB_ITAND_MASK0__IT_LINES_MASK_FLOC 0
#define BANK_PR_COMB_ITAND_MASK0__IT_LINES_MASK_FSIZ 32
#define BANK_PR_COMB_ITAND_MASK0__IT_LINES_MASK_FMSK 0xffffffff


/**
\name BANK_PR_COMB_ITAND_MASK1

Mask bits in PR_COMB_ITAND_STATUS_STS
 <TABLE>
 <TR><TD><B>NAME</B></TD><TD><B>SIZE</B></TD><TD><B>OFFSET</B></TD><TD><B>EXTERNAL MODE</B></TD><TD><B>INTERNAL MODE</B></TD><TD><B>RESET VALUE</B></TD><TD><B>FIELD MASK</B></TD></TR>
 <TR><TD> BANK_PR_COMB_ITAND_MASK1 </TD><TD> 32 </TD><TD> 0x0000101c </TD><TD> EXTERNAL_READ_WRITE </TD><TD> INTERNAL_READ_ONLY </TD><TD> 0x00000000 </TD><TD> 0xffffffff </TD></TR>
 </TABLE>

 <B> field description</B>
 <TABLE>

 <TR><TD><B>FIELD POS</B></TD><TD><B>NAME</B></TD><TD><B>DESCRIPTION</B></TD></TR>
 <TR><TD> [31:0] </TD><TD> IT_LINES_MASK </TD><TD> mask bit into (register)_STS </TD></TR>
 </TABLE>
*/
// defines for register BANK_PR_COMB_ITAND_MASK1
#define BANK_PR_COMB_ITAND_MASK1_RNAM "BANK_PR_COMB_ITAND_MASK1"
#define BANK_PR_COMB_ITAND_MASK1_RDES "Mask bits in PR_COMB_ITAND_STATUS_STS"
#define BANK_PR_COMB_ITAND_MASK1_ROFF 0x101c
#define BANK_PR_COMB_ITAND_MASK1_RSIZ 32
#define BANK_PR_COMB_ITAND_MASK1_RRWM XIPM2_RW
#define BANK_PR_COMB_ITAND_MASK1_RRST 0x0
#define BANK_PR_COMB_ITAND_MASK1_RMSK 0xffffffff


// defines for field BANK_PR_COMB_ITAND_MASK1__IT_LINES_MASK
#define BANK_PR_COMB_ITAND_MASK1__IT_LINES_MASK_FNAM "BANK_PR_COMB_ITAND_MASK1__IT_LINES_MASK"
#define BANK_PR_COMB_ITAND_MASK1__IT_LINES_MASK_FDES "mask bit into (register)_STS"
#define BANK_PR_COMB_ITAND_MASK1__IT_LINES_MASK_FLOC 0
#define BANK_PR_COMB_ITAND_MASK1__IT_LINES_MASK_FSIZ 32
#define BANK_PR_COMB_ITAND_MASK1__IT_LINES_MASK_FMSK 0xffffffff


/**
\name BANK_PR_COMB_ITAND_MASK2

Mask bits in PR_COMB_ITAND_STATUS_STS
 <TABLE>
 <TR><TD><B>NAME</B></TD><TD><B>SIZE</B></TD><TD><B>OFFSET</B></TD><TD><B>EXTERNAL MODE</B></TD><TD><B>INTERNAL MODE</B></TD><TD><B>RESET VALUE</B></TD><TD><B>FIELD MASK</B></TD></TR>
 <TR><TD> BANK_PR_COMB_ITAND_MASK2 </TD><TD> 32 </TD><TD> 0x0000102c </TD><TD> EXTERNAL_READ_WRITE </TD><TD> INTERNAL_READ_ONLY </TD><TD> 0x00000000 </TD><TD> 0xffffffff </TD></TR>
 </TABLE>

 <B> field description</B>
 <TABLE>

 <TR><TD><B>FIELD POS</B></TD><TD><B>NAME</B></TD><TD><B>DESCRIPTION</B></TD></TR>
 <TR><TD> [31:0] </TD><TD> IT_LINES_MASK </TD><TD> mask bit into (register)_STS </TD></TR>
 </TABLE>
*/
// defines for register BANK_PR_COMB_ITAND_MASK2
#define BANK_PR_COMB_ITAND_MASK2_RNAM "BANK_PR_COMB_ITAND_MASK2"
#define BANK_PR_COMB_ITAND_MASK2_RDES "Mask bits in PR_COMB_ITAND_STATUS_STS"
#define BANK_PR_COMB_ITAND_MASK2_ROFF 0x102c
#define BANK_PR_COMB_ITAND_MASK2_RSIZ 32
#define BANK_PR_COMB_ITAND_MASK2_RRWM XIPM2_RW
#define BANK_PR_COMB_ITAND_MASK2_RRST 0x0
#define BANK_PR_COMB_ITAND_MASK2_RMSK 0xffffffff


// defines for field BANK_PR_COMB_ITAND_MASK2__IT_LINES_MASK
#define BANK_PR_COMB_ITAND_MASK2__IT_LINES_MASK_FNAM "BANK_PR_COMB_ITAND_MASK2__IT_LINES_MASK"
#define BANK_PR_COMB_ITAND_MASK2__IT_LINES_MASK_FDES "mask bit into (register)_STS"
#define BANK_PR_COMB_ITAND_MASK2__IT_LINES_MASK_FLOC 0
#define BANK_PR_COMB_ITAND_MASK2__IT_LINES_MASK_FSIZ 32
#define BANK_PR_COMB_ITAND_MASK2__IT_LINES_MASK_FMSK 0xffffffff


/**
\name BANK_PR_COMB_ITAND_MASK3

Mask bits in PR_COMB_ITAND_STATUS_STS
 <TABLE>
 <TR><TD><B>NAME</B></TD><TD><B>SIZE</B></TD><TD><B>OFFSET</B></TD><TD><B>EXTERNAL MODE</B></TD><TD><B>INTERNAL MODE</B></TD><TD><B>RESET VALUE</B></TD><TD><B>FIELD MASK</B></TD></TR>
 <TR><TD> BANK_PR_COMB_ITAND_MASK3 </TD><TD> 32 </TD><TD> 0x0000103c </TD><TD> EXTERNAL_READ_WRITE </TD><TD> INTERNAL_READ_ONLY </TD><TD> 0x00000000 </TD><TD> 0xffffffff </TD></TR>
 </TABLE>

 <B> field description</B>
 <TABLE>

 <TR><TD><B>FIELD POS</B></TD><TD><B>NAME</B></TD><TD><B>DESCRIPTION</B></TD></TR>
 <TR><TD> [31:0] </TD><TD> IT_LINES_MASK </TD><TD> mask bit into (register)_STS </TD></TR>
 </TABLE>
*/
// defines for register BANK_PR_COMB_ITAND_MASK3
#define BANK_PR_COMB_ITAND_MASK3_RNAM "BANK_PR_COMB_ITAND_MASK3"
#define BANK_PR_COMB_ITAND_MASK3_RDES "Mask bits in PR_COMB_ITAND_STATUS_STS"
#define BANK_PR_COMB_ITAND_MASK3_ROFF 0x103c
#define BANK_PR_COMB_ITAND_MASK3_RSIZ 32
#define BANK_PR_COMB_ITAND_MASK3_RRWM XIPM2_RW
#define BANK_PR_COMB_ITAND_MASK3_RRST 0x0
#define BANK_PR_COMB_ITAND_MASK3_RMSK 0xffffffff


// defines for field BANK_PR_COMB_ITAND_MASK3__IT_LINES_MASK
#define BANK_PR_COMB_ITAND_MASK3__IT_LINES_MASK_FNAM "BANK_PR_COMB_ITAND_MASK3__IT_LINES_MASK"
#define BANK_PR_COMB_ITAND_MASK3__IT_LINES_MASK_FDES "mask bit into (register)_STS"
#define BANK_PR_COMB_ITAND_MASK3__IT_LINES_MASK_FLOC 0
#define BANK_PR_COMB_ITAND_MASK3__IT_LINES_MASK_FSIZ 32
#define BANK_PR_COMB_ITAND_MASK3__IT_LINES_MASK_FMSK 0xffffffff


/**
\name BANK_PR_COMB_ITAND_MASK4

Mask bits in PR_COMB_ITAND_STATUS_STS
 <TABLE>
 <TR><TD><B>NAME</B></TD><TD><B>SIZE</B></TD><TD><B>OFFSET</B></TD><TD><B>EXTERNAL MODE</B></TD><TD><B>INTERNAL MODE</B></TD><TD><B>RESET VALUE</B></TD><TD><B>FIELD MASK</B></TD></TR>
 <TR><TD> BANK_PR_COMB_ITAND_MASK4 </TD><TD> 32 </TD><TD> 0x0000104c </TD><TD> EXTERNAL_READ_WRITE </TD><TD> INTERNAL_READ_ONLY </TD><TD> 0x00000000 </TD><TD> 0xffffffff </TD></TR>
 </TABLE>

 <B> field description</B>
 <TABLE>

 <TR><TD><B>FIELD POS</B></TD><TD><B>NAME</B></TD><TD><B>DESCRIPTION</B></TD></TR>
 <TR><TD> [31:0] </TD><TD> IT_LINES_MASK </TD><TD> mask bit into (register)_STS </TD></TR>
 </TABLE>
*/
// defines for register BANK_PR_COMB_ITAND_MASK4
#define BANK_PR_COMB_ITAND_MASK4_RNAM "BANK_PR_COMB_ITAND_MASK4"
#define BANK_PR_COMB_ITAND_MASK4_RDES "Mask bits in PR_COMB_ITAND_STATUS_STS"
#define BANK_PR_COMB_ITAND_MASK4_ROFF 0x104c
#define BANK_PR_COMB_ITAND_MASK4_RSIZ 32
#define BANK_PR_COMB_ITAND_MASK4_RRWM XIPM2_RW
#define BANK_PR_COMB_ITAND_MASK4_RRST 0x0
#define BANK_PR_COMB_ITAND_MASK4_RMSK 0xffffffff


// defines for field BANK_PR_COMB_ITAND_MASK4__IT_LINES_MASK
#define BANK_PR_COMB_ITAND_MASK4__IT_LINES_MASK_FNAM "BANK_PR_COMB_ITAND_MASK4__IT_LINES_MASK"
#define BANK_PR_COMB_ITAND_MASK4__IT_LINES_MASK_FDES "mask bit into (register)_STS"
#define BANK_PR_COMB_ITAND_MASK4__IT_LINES_MASK_FLOC 0
#define BANK_PR_COMB_ITAND_MASK4__IT_LINES_MASK_FSIZ 32
#define BANK_PR_COMB_ITAND_MASK4__IT_LINES_MASK_FMSK 0xffffffff


/**
\name BANK_PR_COMB_ITAND_MASK5

Mask bits in PR_COMB_ITAND_STATUS_STS
 <TABLE>
 <TR><TD><B>NAME</B></TD><TD><B>SIZE</B></TD><TD><B>OFFSET</B></TD><TD><B>EXTERNAL MODE</B></TD><TD><B>INTERNAL MODE</B></TD><TD><B>RESET VALUE</B></TD><TD><B>FIELD MASK</B></TD></TR>
 <TR><TD> BANK_PR_COMB_ITAND_MASK5 </TD><TD> 32 </TD><TD> 0x0000105c </TD><TD> EXTERNAL_READ_WRITE </TD><TD> INTERNAL_READ_ONLY </TD><TD> 0x00000000 </TD><TD> 0xffffffff </TD></TR>
 </TABLE>

 <B> field description</B>
 <TABLE>

 <TR><TD><B>FIELD POS</B></TD><TD><B>NAME</B></TD><TD><B>DESCRIPTION</B></TD></TR>
 <TR><TD> [31:0] </TD><TD> IT_LINES_MASK </TD><TD> mask bit into (register)_STS </TD></TR>
 </TABLE>
*/
// defines for register BANK_PR_COMB_ITAND_MASK5
#define BANK_PR_COMB_ITAND_MASK5_RNAM "BANK_PR_COMB_ITAND_MASK5"
#define BANK_PR_COMB_ITAND_MASK5_RDES "Mask bits in PR_COMB_ITAND_STATUS_STS"
#define BANK_PR_COMB_ITAND_MASK5_ROFF 0x105c
#define BANK_PR_COMB_ITAND_MASK5_RSIZ 32
#define BANK_PR_COMB_ITAND_MASK5_RRWM XIPM2_RW
#define BANK_PR_COMB_ITAND_MASK5_RRST 0x0
#define BANK_PR_COMB_ITAND_MASK5_RMSK 0xffffffff


// defines for field BANK_PR_COMB_ITAND_MASK5__IT_LINES_MASK
#define BANK_PR_COMB_ITAND_MASK5__IT_LINES_MASK_FNAM "BANK_PR_COMB_ITAND_MASK5__IT_LINES_MASK"
#define BANK_PR_COMB_ITAND_MASK5__IT_LINES_MASK_FDES "mask bit into (register)_STS"
#define BANK_PR_COMB_ITAND_MASK5__IT_LINES_MASK_FLOC 0
#define BANK_PR_COMB_ITAND_MASK5__IT_LINES_MASK_FSIZ 32
#define BANK_PR_COMB_ITAND_MASK5__IT_LINES_MASK_FMSK 0xffffffff


/**
\name BANK_PR_COMB_ITAND_MASK6

Mask bits in PR_COMB_ITAND_STATUS_STS
 <TABLE>
 <TR><TD><B>NAME</B></TD><TD><B>SIZE</B></TD><TD><B>OFFSET</B></TD><TD><B>EXTERNAL MODE</B></TD><TD><B>INTERNAL MODE</B></TD><TD><B>RESET VALUE</B></TD><TD><B>FIELD MASK</B></TD></TR>
 <TR><TD> BANK_PR_COMB_ITAND_MASK6 </TD><TD> 32 </TD><TD> 0x0000106c </TD><TD> EXTERNAL_READ_WRITE </TD><TD> INTERNAL_READ_ONLY </TD><TD> 0x00000000 </TD><TD> 0xffffffff </TD></TR>
 </TABLE>

 <B> field description</B>
 <TABLE>

 <TR><TD><B>FIELD POS</B></TD><TD><B>NAME</B></TD><TD><B>DESCRIPTION</B></TD></TR>
 <TR><TD> [31:0] </TD><TD> IT_LINES_MASK </TD><TD> mask bit into (register)_STS </TD></TR>
 </TABLE>
*/
// defines for register BANK_PR_COMB_ITAND_MASK6
#define BANK_PR_COMB_ITAND_MASK6_RNAM "BANK_PR_COMB_ITAND_MASK6"
#define BANK_PR_COMB_ITAND_MASK6_RDES "Mask bits in PR_COMB_ITAND_STATUS_STS"
#define BANK_PR_COMB_ITAND_MASK6_ROFF 0x106c
#define BANK_PR_COMB_ITAND_MASK6_RSIZ 32
#define BANK_PR_COMB_ITAND_MASK6_RRWM XIPM2_RW
#define BANK_PR_COMB_ITAND_MASK6_RRST 0x0
#define BANK_PR_COMB_ITAND_MASK6_RMSK 0xffffffff


// defines for field BANK_PR_COMB_ITAND_MASK6__IT_LINES_MASK
#define BANK_PR_COMB_ITAND_MASK6__IT_LINES_MASK_FNAM "BANK_PR_COMB_ITAND_MASK6__IT_LINES_MASK"
#define BANK_PR_COMB_ITAND_MASK6__IT_LINES_MASK_FDES "mask bit into (register)_STS"
#define BANK_PR_COMB_ITAND_MASK6__IT_LINES_MASK_FLOC 0
#define BANK_PR_COMB_ITAND_MASK6__IT_LINES_MASK_FSIZ 32
#define BANK_PR_COMB_ITAND_MASK6__IT_LINES_MASK_FMSK 0xffffffff


/**
\name BANK_PR_COMB_ITAND_MASK7

Mask bits in PR_COMB_ITAND_STATUS_STS
 <TABLE>
 <TR><TD><B>NAME</B></TD><TD><B>SIZE</B></TD><TD><B>OFFSET</B></TD><TD><B>EXTERNAL MODE</B></TD><TD><B>INTERNAL MODE</B></TD><TD><B>RESET VALUE</B></TD><TD><B>FIELD MASK</B></TD></TR>
 <TR><TD> BANK_PR_COMB_ITAND_MASK7 </TD><TD> 32 </TD><TD> 0x0000107c </TD><TD> EXTERNAL_READ_WRITE </TD><TD> INTERNAL_READ_ONLY </TD><TD> 0x00000000 </TD><TD> 0xffffffff </TD></TR>
 </TABLE>

 <B> field description</B>
 <TABLE>

 <TR><TD><B>FIELD POS</B></TD><TD><B>NAME</B></TD><TD><B>DESCRIPTION</B></TD></TR>
 <TR><TD> [31:0] </TD><TD> IT_LINES_MASK </TD><TD> mask bit into (register)_STS </TD></TR>
 </TABLE>
*/
// defines for register BANK_PR_COMB_ITAND_MASK7
#define BANK_PR_COMB_ITAND_MASK7_RNAM "BANK_PR_COMB_ITAND_MASK7"
#define BANK_PR_COMB_ITAND_MASK7_RDES "Mask bits in PR_COMB_ITAND_STATUS_STS"
#define BANK_PR_COMB_ITAND_MASK7_ROFF 0x107c
#define BANK_PR_COMB_ITAND_MASK7_RSIZ 32
#define BANK_PR_COMB_ITAND_MASK7_RRWM XIPM2_RW
#define BANK_PR_COMB_ITAND_MASK7_RRST 0x0
#define BANK_PR_COMB_ITAND_MASK7_RMSK 0xffffffff


// defines for field BANK_PR_COMB_ITAND_MASK7__IT_LINES_MASK
#define BANK_PR_COMB_ITAND_MASK7__IT_LINES_MASK_FNAM "BANK_PR_COMB_ITAND_MASK7__IT_LINES_MASK"
#define BANK_PR_COMB_ITAND_MASK7__IT_LINES_MASK_FDES "mask bit into (register)_STS"
#define BANK_PR_COMB_ITAND_MASK7__IT_LINES_MASK_FLOC 0
#define BANK_PR_COMB_ITAND_MASK7__IT_LINES_MASK_FSIZ 32
#define BANK_PR_COMB_ITAND_MASK7__IT_LINES_MASK_FMSK 0xffffffff


/**
\name BANK_PR_COMB_ITAND_MODE

Interrupt mode
 <TABLE>
 <TR><TD><B>NAME</B></TD><TD><B>SIZE</B></TD><TD><B>OFFSET</B></TD><TD><B>EXTERNAL MODE</B></TD><TD><B>INTERNAL MODE</B></TD><TD><B>RESET VALUE</B></TD><TD><B>FIELD MASK</B></TD></TR>
 <TR><TD> BANK_PR_COMB_ITAND_MODE </TD><TD> 32 </TD><TD> 0x00001200 </TD><TD> EXTERNAL_READ_WRITE </TD><TD> INTERNAL_READ_ONLY </TD><TD> 0x00000000 </TD><TD> 0x000000ff </TD></TR>
 </TABLE>

 <B> field description</B>
 <TABLE>

 <TR><TD><B>FIELD POS</B></TD><TD><B>NAME</B></TD><TD><B>DESCRIPTION</B></TD></TR>
 <TR><TD> [7:0] </TD><TD> AUTORST </TD><TD> auto reset bit inside PR_COMB_ITAND_STS according to PR_COMB_ITAND_MASK[i] when AUTORST[i] is high. For instance, if AUTORST[1] is 1 then when the condition ((PR_COMB_ITAND_STS &amp; PR_COMB_ITAND_MASK1) == PR_COMB_ITAND_MASK1) and (PR_COMB_ITAND_MASK1 != 0)) is reached then PR_COMB_ITAND_STS = PR_COMB_ITAND_STS &amp; ~ PR_COMB_ITAND_MASK1. If bits in AUTORST field are low then software is in charge to reset PR_COMB_ITAND_STS by writing PR_COMB_ITAND_STATUS_BCLR. Regarding ITAND interrupt generation, when AUTORST[i] is low, ITAND will stay high while it is not cleared by software (level mode), and when AUTORST[i] is high ITAND will be generated only during 1 cycle when the PR_COMB_ITAND_MASKi condition is reached (pulse mode).   </TD></TR>
 </TABLE>
*/
// defines for register BANK_PR_COMB_ITAND_MODE
#define BANK_PR_COMB_ITAND_MODE_RNAM "BANK_PR_COMB_ITAND_MODE"
#define BANK_PR_COMB_ITAND_MODE_RDES "Interrupt mode"
#define BANK_PR_COMB_ITAND_MODE_ROFF 0x1200
#define BANK_PR_COMB_ITAND_MODE_RSIZ 32
#define BANK_PR_COMB_ITAND_MODE_RRWM XIPM2_RW
#define BANK_PR_COMB_ITAND_MODE_RRST 0x0
#define BANK_PR_COMB_ITAND_MODE_RMSK 0xff


// defines for field BANK_PR_COMB_ITAND_MODE__AUTORST
#define BANK_PR_COMB_ITAND_MODE__AUTORST_FNAM "BANK_PR_COMB_ITAND_MODE__AUTORST"
#define BANK_PR_COMB_ITAND_MODE__AUTORST_FDES "auto reset bit inside PR_COMB_ITAND_STS according to PR_COMB_ITAND_MASK[i] when AUTORST[i] is high. For instance, if AUTORST[1] is 1 then when the condition ((PR_COMB_ITAND_STS &amp; PR_COMB_ITAND_MASK1) == PR_COMB_ITAND_MASK1) and (PR_COMB_ITAND_MASK1 != 0)) is reached then PR_COMB_ITAND_STS = PR_COMB_ITAND_STS &amp; ~ PR_COMB_ITAND_MASK1. If bits in AUTORST field are low then software is in charge to reset PR_COMB_ITAND_STS by writing PR_COMB_ITAND_STATUS_BCLR. Regarding ITAND interrupt generation, when AUTORST[i] is low, ITAND will stay high while it is not cleared by software (level mode), and when AUTORST[i] is high ITAND will be generated only during 1 cycle when the PR_COMB_ITAND_MASKi condition is reached (pulse mode).  "
#define BANK_PR_COMB_ITAND_MODE__AUTORST_FLOC 0
#define BANK_PR_COMB_ITAND_MODE__AUTORST_FSIZ 8
#define BANK_PR_COMB_ITAND_MODE__AUTORST_FMSK 0xff


/**
\name BANK_PR_COMB_ITOR_STATUS_STS

Interrupt OR combining status
 <TABLE>
 <TR><TD><B>NAME</B></TD><TD><B>SIZE</B></TD><TD><B>OFFSET</B></TD><TD><B>EXTERNAL MODE</B></TD><TD><B>INTERNAL MODE</B></TD><TD><B>RESET VALUE</B></TD><TD><B>FIELD MASK</B></TD></TR>
 <TR><TD> BANK_PR_COMB_ITOR_STATUS_STS </TD><TD> 32 </TD><TD> 0x00001300 </TD><TD> EXTERNAL_READ_ONLY </TD><TD> INTERNAL_READ_WRITE </TD><TD> 0x00000000 </TD><TD> 0xffffffff </TD></TR>
 </TABLE>

 <B> field description</B>
 <TABLE>

 <TR><TD><B>FIELD POS</B></TD><TD><B>NAME</B></TD><TD><B>DESCRIPTION</B></TD></TR>
 <TR><TD> [31:0] </TD><TD> IT_LINES_STATUS </TD><TD> interrupt lines status </TD></TR>
 </TABLE>
*/
// defines for register BANK_PR_COMB_ITOR_STATUS_STS
#define BANK_PR_COMB_ITOR_STATUS_STS_RNAM "BANK_PR_COMB_ITOR_STATUS_STS"
#define BANK_PR_COMB_ITOR_STATUS_STS_RDES "Interrupt OR combining status"
#define BANK_PR_COMB_ITOR_STATUS_STS_ROFF 0x1300
#define BANK_PR_COMB_ITOR_STATUS_STS_RSIZ 32
#define BANK_PR_COMB_ITOR_STATUS_STS_RRWM XIPM2_RO
#define BANK_PR_COMB_ITOR_STATUS_STS_RRST 0x0
#define BANK_PR_COMB_ITOR_STATUS_STS_RMSK 0xffffffff


// defines for field BANK_PR_COMB_ITOR_STATUS_STS__IT_LINES_STATUS
#define BANK_PR_COMB_ITOR_STATUS_STS__IT_LINES_STATUS_FNAM "BANK_PR_COMB_ITOR_STATUS_STS__IT_LINES_STATUS"
#define BANK_PR_COMB_ITOR_STATUS_STS__IT_LINES_STATUS_FDES "interrupt lines status"
#define BANK_PR_COMB_ITOR_STATUS_STS__IT_LINES_STATUS_FLOC 0
#define BANK_PR_COMB_ITOR_STATUS_STS__IT_LINES_STATUS_FSIZ 32
#define BANK_PR_COMB_ITOR_STATUS_STS__IT_LINES_STATUS_FMSK 0xffffffff


/**
\name BANK_PR_COMB_ITOR_STATUS_BSET

Set bit into PR_COMB_ITOR_STATUS_STS
 <TABLE>
 <TR><TD><B>NAME</B></TD><TD><B>SIZE</B></TD><TD><B>OFFSET</B></TD><TD><B>EXTERNAL MODE</B></TD><TD><B>INTERNAL MODE</B></TD><TD><B>RESET VALUE</B></TD><TD><B>FIELD MASK</B></TD></TR>
 <TR><TD> BANK_PR_COMB_ITOR_STATUS_BSET </TD><TD> 32 </TD><TD> 0x00001304 </TD><TD> EXTERNAL_WRITE_ONLY </TD><TD> INTERNAL_READ_ONLY </TD><TD> 0x00000000 </TD><TD> 0xffffffff </TD></TR>
 </TABLE>

 <B> field description</B>
 <TABLE>

 <TR><TD><B>FIELD POS</B></TD><TD><B>NAME</B></TD><TD><B>DESCRIPTION</B></TD></TR>
 <TR><TD> [31:0] </TD><TD> IT_LINES_SET </TD><TD> set bit in (register)_STS </TD></TR>
 </TABLE>
*/
// defines for register BANK_PR_COMB_ITOR_STATUS_BSET
#define BANK_PR_COMB_ITOR_STATUS_BSET_RNAM "BANK_PR_COMB_ITOR_STATUS_BSET"
#define BANK_PR_COMB_ITOR_STATUS_BSET_RDES "Set bit into PR_COMB_ITOR_STATUS_STS"
#define BANK_PR_COMB_ITOR_STATUS_BSET_ROFF 0x1304
#define BANK_PR_COMB_ITOR_STATUS_BSET_RSIZ 32
#define BANK_PR_COMB_ITOR_STATUS_BSET_RRWM XIPM2_WO
#define BANK_PR_COMB_ITOR_STATUS_BSET_RRST 0x0
#define BANK_PR_COMB_ITOR_STATUS_BSET_RMSK 0xffffffff


// defines for field BANK_PR_COMB_ITOR_STATUS_BSET__IT_LINES_SET
#define BANK_PR_COMB_ITOR_STATUS_BSET__IT_LINES_SET_FNAM "BANK_PR_COMB_ITOR_STATUS_BSET__IT_LINES_SET"
#define BANK_PR_COMB_ITOR_STATUS_BSET__IT_LINES_SET_FDES "set bit in (register)_STS"
#define BANK_PR_COMB_ITOR_STATUS_BSET__IT_LINES_SET_FLOC 0
#define BANK_PR_COMB_ITOR_STATUS_BSET__IT_LINES_SET_FSIZ 32
#define BANK_PR_COMB_ITOR_STATUS_BSET__IT_LINES_SET_FMSK 0xffffffff


/**
\name BANK_PR_COMB_ITOR_STATUS_BCLR

Clear bit into PR_COMB_ITOR_STATUS_STS
 <TABLE>
 <TR><TD><B>NAME</B></TD><TD><B>SIZE</B></TD><TD><B>OFFSET</B></TD><TD><B>EXTERNAL MODE</B></TD><TD><B>INTERNAL MODE</B></TD><TD><B>RESET VALUE</B></TD><TD><B>FIELD MASK</B></TD></TR>
 <TR><TD> BANK_PR_COMB_ITOR_STATUS_BCLR </TD><TD> 32 </TD><TD> 0x00001308 </TD><TD> EXTERNAL_WRITE_ONLY </TD><TD> INTERNAL_READ_ONLY </TD><TD> 0x00000000 </TD><TD> 0xffffffff </TD></TR>
 </TABLE>

 <B> field description</B>
 <TABLE>

 <TR><TD><B>FIELD POS</B></TD><TD><B>NAME</B></TD><TD><B>DESCRIPTION</B></TD></TR>
 <TR><TD> [31:0] </TD><TD> IT_LINES_CLEAR </TD><TD> clear bit in (register)_STS </TD></TR>
 </TABLE>
*/
// defines for register BANK_PR_COMB_ITOR_STATUS_BCLR
#define BANK_PR_COMB_ITOR_STATUS_BCLR_RNAM "BANK_PR_COMB_ITOR_STATUS_BCLR"
#define BANK_PR_COMB_ITOR_STATUS_BCLR_RDES "Clear bit into PR_COMB_ITOR_STATUS_STS"
#define BANK_PR_COMB_ITOR_STATUS_BCLR_ROFF 0x1308
#define BANK_PR_COMB_ITOR_STATUS_BCLR_RSIZ 32
#define BANK_PR_COMB_ITOR_STATUS_BCLR_RRWM XIPM2_WO
#define BANK_PR_COMB_ITOR_STATUS_BCLR_RRST 0x0
#define BANK_PR_COMB_ITOR_STATUS_BCLR_RMSK 0xffffffff


// defines for field BANK_PR_COMB_ITOR_STATUS_BCLR__IT_LINES_CLEAR
#define BANK_PR_COMB_ITOR_STATUS_BCLR__IT_LINES_CLEAR_FNAM "BANK_PR_COMB_ITOR_STATUS_BCLR__IT_LINES_CLEAR"
#define BANK_PR_COMB_ITOR_STATUS_BCLR__IT_LINES_CLEAR_FDES "clear bit in (register)_STS"
#define BANK_PR_COMB_ITOR_STATUS_BCLR__IT_LINES_CLEAR_FLOC 0
#define BANK_PR_COMB_ITOR_STATUS_BCLR__IT_LINES_CLEAR_FSIZ 32
#define BANK_PR_COMB_ITOR_STATUS_BCLR__IT_LINES_CLEAR_FMSK 0xffffffff


/**
\name BANK_PR_COMB_ITOR_MASK

Mask bits in PR_COMB_ITOR_STATUS_STS
 <TABLE>
 <TR><TD><B>NAME</B></TD><TD><B>SIZE</B></TD><TD><B>OFFSET</B></TD><TD><B>EXTERNAL MODE</B></TD><TD><B>INTERNAL MODE</B></TD><TD><B>RESET VALUE</B></TD><TD><B>FIELD MASK</B></TD></TR>
 <TR><TD> BANK_PR_COMB_ITOR_MASK </TD><TD> 32 </TD><TD> 0x0000130c </TD><TD> EXTERNAL_READ_WRITE </TD><TD> INTERNAL_READ_ONLY </TD><TD> 0x00000000 </TD><TD> 0xffffffff </TD></TR>
 </TABLE>

 <B> field description</B>
 <TABLE>

 <TR><TD><B>FIELD POS</B></TD><TD><B>NAME</B></TD><TD><B>DESCRIPTION</B></TD></TR>
 <TR><TD> [31:0] </TD><TD> IT_LINES_MASK </TD><TD> mask bit into (register)_STS </TD></TR>
 </TABLE>
*/
// defines for register BANK_PR_COMB_ITOR_MASK
#define BANK_PR_COMB_ITOR_MASK_RNAM "BANK_PR_COMB_ITOR_MASK"
#define BANK_PR_COMB_ITOR_MASK_RDES "Mask bits in PR_COMB_ITOR_STATUS_STS"
#define BANK_PR_COMB_ITOR_MASK_ROFF 0x130c
#define BANK_PR_COMB_ITOR_MASK_RSIZ 32
#define BANK_PR_COMB_ITOR_MASK_RRWM XIPM2_RW
#define BANK_PR_COMB_ITOR_MASK_RRST 0x0
#define BANK_PR_COMB_ITOR_MASK_RMSK 0xffffffff


// defines for field BANK_PR_COMB_ITOR_MASK__IT_LINES_MASK
#define BANK_PR_COMB_ITOR_MASK__IT_LINES_MASK_FNAM "BANK_PR_COMB_ITOR_MASK__IT_LINES_MASK"
#define BANK_PR_COMB_ITOR_MASK__IT_LINES_MASK_FDES "mask bit into (register)_STS"
#define BANK_PR_COMB_ITOR_MASK__IT_LINES_MASK_FLOC 0
#define BANK_PR_COMB_ITOR_MASK__IT_LINES_MASK_FSIZ 32
#define BANK_PR_COMB_ITOR_MASK__IT_LINES_MASK_FMSK 0xffffffff



//@}
#endif
