#ifndef _C8FVP3_HQVDPLITE_API_VC1RE_H
#define _C8FVP3_HQVDPLITE_API_VC1RE_H

/****************************************************************************************
*                     Copyright STMicroelectronics
*              All rights reserved, COMPANY CONFIDENTIAL
*     Unauthorized reproduction and communication strictly prohibited
*----------------------------------------------------------------------------------------
*                   System Platforms Group - IP&Design/SPG
*----------------------------------------------------------------------------------------
*  This C header file was automatically generated by 'spirit2regtest' utility from the
*  SPIRIT description of the component.
*
*  Purpose : It declares C preprocessor definitions for component, register and 
*            register fields parameters
*
*  Generated by spirit2regtest v1.7.10
*
*  PLEASE DO NOT MODIFY THIS FILE
****************************************************************************************/


/*
* Address Block : VC1RE
*/


/**
* Register : CTRL_PRV_CSDI
* VC1RE Controls for Previous field to CSDi
*/

#define VC1RE_CTRL_PRV_CSDI_OFFSET                      (c8fvp3_hqvdplite_api_VC1RE_BASE_ADDR + 0x00)
#define VC1RE_CTRL_PRV_CSDI_MASK                        (0x00770003)

/**
* Bit-field : VC1RE_ENABLE_LUMA
* Enable of VC1 Range Engine:
*/

#define VC1RE_CTRL_PRV_CSDI_VC1RE_ENABLE_LUMA_SHIFT     (0x00000000)
#define VC1RE_CTRL_PRV_CSDI_VC1RE_ENABLE_LUMA_WIDTH     (1)
#define VC1RE_CTRL_PRV_CSDI_VC1RE_ENABLE_LUMA_MASK      (0x00000001)

/**
* Bit-field : VC1RE_ENABLE_CHROMA
* Enable of VC1 Range Engine:
*/

#define VC1RE_CTRL_PRV_CSDI_VC1RE_ENABLE_CHROMA_SHIFT   (0x00000001)
#define VC1RE_CTRL_PRV_CSDI_VC1RE_ENABLE_CHROMA_WIDTH   (1)
#define VC1RE_CTRL_PRV_CSDI_VC1RE_ENABLE_CHROMA_MASK    (0x00000002)

/**
* Bit-field : VC1RE_COEF_LUMA
* Coefficient for luma VC1 Range Engine.
* Coeff in [0:7] for Range Mapping
* Coeff = 7 for Range Reduction
*/

#define VC1RE_CTRL_PRV_CSDI_VC1RE_COEF_LUMA_SHIFT       (0x00000010)
#define VC1RE_CTRL_PRV_CSDI_VC1RE_COEF_LUMA_WIDTH       (3)
#define VC1RE_CTRL_PRV_CSDI_VC1RE_COEF_LUMA_MASK        (0x00070000)

/**
* Bit-field : VC1RE_COEF_CHROMA
* Coefficient for chroma VC1 Range Engine.
* Coeff in [0:7] for Range Mapping
* Coeff = 7 for Range Reduction
*/

#define VC1RE_CTRL_PRV_CSDI_VC1RE_COEF_CHROMA_SHIFT     (0x00000014)
#define VC1RE_CTRL_PRV_CSDI_VC1RE_COEF_CHROMA_WIDTH     (3)
#define VC1RE_CTRL_PRV_CSDI_VC1RE_COEF_CHROMA_MASK      (0x00700000)

/**
* Register : CTRL_CUR_CSDI
* VC1RE Controls for Current field to CSDi
*/

#define VC1RE_CTRL_CUR_CSDI_OFFSET                      (c8fvp3_hqvdplite_api_VC1RE_BASE_ADDR + 0x04)
#define VC1RE_CTRL_CUR_CSDI_MASK                        (0x00770003)

/**
* Bit-field : VC1RE_ENABLE_LUMA
* Enable of VC1 Range Engine:
*/

#define VC1RE_CTRL_CUR_CSDI_VC1RE_ENABLE_LUMA_SHIFT     (0x00000000)
#define VC1RE_CTRL_CUR_CSDI_VC1RE_ENABLE_LUMA_WIDTH     (1)
#define VC1RE_CTRL_CUR_CSDI_VC1RE_ENABLE_LUMA_MASK      (0x00000001)

/**
* Bit-field : VC1RE_ENABLE_CHROMA
* Enable of VC1 Range Engine:
*/

#define VC1RE_CTRL_CUR_CSDI_VC1RE_ENABLE_CHROMA_SHIFT   (0x00000001)
#define VC1RE_CTRL_CUR_CSDI_VC1RE_ENABLE_CHROMA_WIDTH   (1)
#define VC1RE_CTRL_CUR_CSDI_VC1RE_ENABLE_CHROMA_MASK    (0x00000002)

/**
* Bit-field : VC1RE_COEF_LUMA
* Coefficient for luma VC1 Range Engine.
* Coeff in [0:7] for Range Mapping
* Coeff = 7 for Range Reduction
*/

#define VC1RE_CTRL_CUR_CSDI_VC1RE_COEF_LUMA_SHIFT       (0x00000010)
#define VC1RE_CTRL_CUR_CSDI_VC1RE_COEF_LUMA_WIDTH       (3)
#define VC1RE_CTRL_CUR_CSDI_VC1RE_COEF_LUMA_MASK        (0x00070000)

/**
* Bit-field : VC1RE_COEF_CHROMA
* Coefficient for chroma VC1 Range Engine.
* Coeff in [0:7] for Range Mapping
* Coeff = 7 for Range Reduction
*/

#define VC1RE_CTRL_CUR_CSDI_VC1RE_COEF_CHROMA_SHIFT     (0x00000014)
#define VC1RE_CTRL_CUR_CSDI_VC1RE_COEF_CHROMA_WIDTH     (3)
#define VC1RE_CTRL_CUR_CSDI_VC1RE_COEF_CHROMA_MASK      (0x00700000)

/**
* Register : CTRL_NXT_CSDI
* VC1RE Controls for Next field to CSDi
*/

#define VC1RE_CTRL_NXT_CSDI_OFFSET                      (c8fvp3_hqvdplite_api_VC1RE_BASE_ADDR + 0x08)
#define VC1RE_CTRL_NXT_CSDI_MASK                        (0x00770003)

/**
* Bit-field : VC1RE_ENABLE_LUMA
* Enable of VC1 Range Engine:
*/

#define VC1RE_CTRL_NXT_CSDI_VC1RE_ENABLE_LUMA_SHIFT     (0x00000000)
#define VC1RE_CTRL_NXT_CSDI_VC1RE_ENABLE_LUMA_WIDTH     (1)
#define VC1RE_CTRL_NXT_CSDI_VC1RE_ENABLE_LUMA_MASK      (0x00000001)

/**
* Bit-field : VC1RE_ENABLE_CHROMA
* Enable of VC1 Range Engine:
*/

#define VC1RE_CTRL_NXT_CSDI_VC1RE_ENABLE_CHROMA_SHIFT   (0x00000001)
#define VC1RE_CTRL_NXT_CSDI_VC1RE_ENABLE_CHROMA_WIDTH   (1)
#define VC1RE_CTRL_NXT_CSDI_VC1RE_ENABLE_CHROMA_MASK    (0x00000002)

/**
* Bit-field : VC1RE_COEF_LUMA
* Coefficient for luma VC1 Range Engine.
* Coeff in [0:7] for Range Mapping
* Coeff = 7 for Range Reduction
*/

#define VC1RE_CTRL_NXT_CSDI_VC1RE_COEF_LUMA_SHIFT       (0x00000010)
#define VC1RE_CTRL_NXT_CSDI_VC1RE_COEF_LUMA_WIDTH       (3)
#define VC1RE_CTRL_NXT_CSDI_VC1RE_COEF_LUMA_MASK        (0x00070000)

/**
* Bit-field : VC1RE_COEF_CHROMA
* Coefficient for chroma VC1 Range Engine.
* Coeff in [0:7] for Range Mapping
* Coeff = 7 for Range Reduction
*/

#define VC1RE_CTRL_NXT_CSDI_VC1RE_COEF_CHROMA_SHIFT     (0x00000014)
#define VC1RE_CTRL_NXT_CSDI_VC1RE_COEF_CHROMA_WIDTH     (3)
#define VC1RE_CTRL_NXT_CSDI_VC1RE_COEF_CHROMA_MASK      (0x00700000)

/**
* Register : CTRL_CUR_FMD
* VC1RE Controls for Current field to FMD
*/

#define VC1RE_CTRL_CUR_FMD_OFFSET                       (c8fvp3_hqvdplite_api_VC1RE_BASE_ADDR + 0x0C)
#define VC1RE_CTRL_CUR_FMD_MASK                         (0x00070001)

/**
* Bit-field : VC1RE_ENABLE_LUMA
* Enable of VC1 Range Engine:
*/

#define VC1RE_CTRL_CUR_FMD_VC1RE_ENABLE_LUMA_SHIFT      (0x00000000)
#define VC1RE_CTRL_CUR_FMD_VC1RE_ENABLE_LUMA_WIDTH      (1)
#define VC1RE_CTRL_CUR_FMD_VC1RE_ENABLE_LUMA_MASK       (0x00000001)

/**
* Bit-field : VC1RE_COEF_LUMA
* Coefficient for luma VC1 Range Engine.
* Coeff in [0:7] for Range Mapping
* Coeff = 7 for Range Reduction
*/

#define VC1RE_CTRL_CUR_FMD_VC1RE_COEF_LUMA_SHIFT        (0x00000010)
#define VC1RE_CTRL_CUR_FMD_VC1RE_COEF_LUMA_WIDTH        (3)
#define VC1RE_CTRL_CUR_FMD_VC1RE_COEF_LUMA_MASK         (0x00070000)

/**
* Register : CTRL_NXT_FMD
* VC1RE Controls for Next field to FMD
*/

#define VC1RE_CTRL_NXT_FMD_OFFSET                       (c8fvp3_hqvdplite_api_VC1RE_BASE_ADDR + 0x10)
#define VC1RE_CTRL_NXT_FMD_MASK                         (0x00070001)

/**
* Bit-field : VC1RE_ENABLE_LUMA
* Enable of VC1 Range Engine:
*/

#define VC1RE_CTRL_NXT_FMD_VC1RE_ENABLE_LUMA_SHIFT      (0x00000000)
#define VC1RE_CTRL_NXT_FMD_VC1RE_ENABLE_LUMA_WIDTH      (1)
#define VC1RE_CTRL_NXT_FMD_VC1RE_ENABLE_LUMA_MASK       (0x00000001)

/**
* Bit-field : VC1RE_COEF_LUMA
* Coefficient for luma VC1 Range Engine.
* Coeff in [0:7] for Range Mapping
* Coeff = 7 for Range Reduction
*/

#define VC1RE_CTRL_NXT_FMD_VC1RE_COEF_LUMA_SHIFT        (0x00000010)
#define VC1RE_CTRL_NXT_FMD_VC1RE_COEF_LUMA_WIDTH        (3)
#define VC1RE_CTRL_NXT_FMD_VC1RE_COEF_LUMA_MASK         (0x00070000)


#ifndef HQVDPLITE_API_FOR_STAPI
typedef struct {
    gvh_u32_t CTRL_PRV_CSDI;  /* at 0 */
    gvh_u32_t CTRL_CUR_CSDI;  /* at 4 */
    gvh_u32_t CTRL_NXT_CSDI;  /* at 8 */
    gvh_u32_t CTRL_CUR_FMD;  /* at 12 */
    gvh_u32_t CTRL_NXT_FMD;  /* at 16 */
} s_VC1RE;

#else
typedef struct {
U32 CtrlPrvCsdi;  /* at 0 */
U32 CtrlCurCsdi;  /* at 4 */
U32 CtrlNxtCsdi;  /* at 8 */
U32 CtrlCurFmd;  /* at 12 */
U32 CtrlNxtFmd;  /* at 16 */
} HQVDPLITE_VC1RE_Params_t;
#endif
#endif
