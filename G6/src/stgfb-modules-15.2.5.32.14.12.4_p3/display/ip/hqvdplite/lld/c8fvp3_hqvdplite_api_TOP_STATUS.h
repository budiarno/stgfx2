#ifndef _C8FVP3_HQVDPLITE_API_TOP_STATUS_H
#define _C8FVP3_HQVDPLITE_API_TOP_STATUS_H

/****************************************************************************************
*                     Copyright STMicroelectronics
*              All rights reserved, COMPANY CONFIDENTIAL
*     Unauthorized reproduction and communication strictly prohibited
*----------------------------------------------------------------------------------------
*                   System Platforms Group - IP&Design/SPG
*----------------------------------------------------------------------------------------
*  This C header file was automatically generated by 'spirit2regtest' utility from the
*  SPIRIT description of the component.
*
*  Purpose : It declares C preprocessor definitions for component, register and 
*            register fields parameters
*
*  Generated by spirit2regtest v1.7.10
*
*  PLEASE DO NOT MODIFY THIS FILE
****************************************************************************************/


/*
* Address Block : TOP_STATUS
*/


/**
* Register : PROCESSING_TIME
* XP70 processing time in cycles
*/

#define TOP_STATUS_PROCESSING_TIME_OFFSET               (c8fvp3_hqvdplite_api_TOP_STATUS_BASE_ADDR + 0x00)
#define TOP_STATUS_PROCESSING_TIME_MASK                 (0xFFFFFFFF)

/**
* Bit-field : NB_CYCLES
* Unsigned value representing the number of cycle spent by the xp70 between cmd start and end of processing.
*/

#define TOP_STATUS_PROCESSING_TIME_NB_CYCLES_SHIFT      (0x00000000)
#define TOP_STATUS_PROCESSING_TIME_NB_CYCLES_WIDTH      (32)
#define TOP_STATUS_PROCESSING_TIME_NB_CYCLES_MASK       (0xFFFFFFFF)

/**
* Register : INPUT_Y_CRC
* CRC value luma input field
*/

#define TOP_STATUS_INPUT_Y_CRC_OFFSET                   (c8fvp3_hqvdplite_api_TOP_STATUS_BASE_ADDR + 0x04)
#define TOP_STATUS_INPUT_Y_CRC_MASK                     (0xFFFFFFFF)

/**
* Bit-field : CRC_RWP
* Unsigned value representing the calculated checksum on the data of the current transfer. This status is dedicated to check the crc value of output of the delta IP.
*/

#define TOP_STATUS_INPUT_Y_CRC_CRC_RWP_SHIFT            (0x00000000)
#define TOP_STATUS_INPUT_Y_CRC_CRC_RWP_WIDTH            (32)
#define TOP_STATUS_INPUT_Y_CRC_CRC_RWP_MASK             (0xFFFFFFFF)

/**
* Register : INPUT_UV_CRC
* CRC value chroma input field
*/

#define TOP_STATUS_INPUT_UV_CRC_OFFSET                  (c8fvp3_hqvdplite_api_TOP_STATUS_BASE_ADDR + 0x08)
#define TOP_STATUS_INPUT_UV_CRC_MASK                    (0xFFFFFFFF)

/**
* Bit-field : CRC_RWP
* Unsigned value representing the calculated checksum on the data of the current transfer. This status is dedicated to check the crc value of output of the delta IP.
*/

#define TOP_STATUS_INPUT_UV_CRC_CRC_RWP_SHIFT           (0x00000000)
#define TOP_STATUS_INPUT_UV_CRC_CRC_RWP_WIDTH           (32)
#define TOP_STATUS_INPUT_UV_CRC_CRC_RWP_MASK            (0xFFFFFFFF)


#ifndef HQVDPLITE_API_FOR_STAPI
typedef struct {
    gvh_u32_t PROCESSING_TIME;  /* at 0 */
    gvh_u32_t INPUT_Y_CRC;  /* at 4 */
    gvh_u32_t INPUT_UV_CRC;  /* at 8 */
} s_TOP_STATUS;

#else
typedef struct {
U32 ProcessingTime;  /* at 0 */
U32 InputYCrc;  /* at 4 */
U32 InputUvCrc;  /* at 8 */
} HQVDPLITE_TOPStatus_Params_t;
#endif
#endif
