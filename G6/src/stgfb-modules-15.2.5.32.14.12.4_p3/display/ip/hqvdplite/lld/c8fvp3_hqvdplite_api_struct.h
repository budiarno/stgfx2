#ifndef _C8FVP3_HQVDPLITE
#define _C8FVP3_HQVDPLITE

/****************************************************************************************
*                     Copyright STMicroelectronics
*              All rights reserved, COMPANY CONFIDENTIAL
*     Unauthorized reproduction and communication strictly prohibited
*----------------------------------------------------------------------------------------
*                   System Platforms Group - IP&Design/SPG
*----------------------------------------------------------------------------------------
*  This C header file was automatically generated by 'spirit2regtest' utility from the
*  SPIRIT description of the component.
*
*  Purpose : It declares C preprocessor definitions for component, register and
*            register fields parameters
*
*  Generated by spirit2regtest v1.7.10
*
*  PLEASE DO NOT MODIFY THIS FILE
****************************************************************************************/
 #define U32 uint32_t
 #define U16 uint16_t
 #define U8 uint8_t

 #define S32 int32_t
 #define S16 int16_t
 #define S8  int8_t

#include "c8fvp3_hqvdplite_api_defines.h"
#include "c8fvp3_hqvdplite_api_TOP.h"
#include "c8fvp3_hqvdplite_api_VC1RE.h"
#include "c8fvp3_hqvdplite_api_FMD.h"
#include "c8fvp3_hqvdplite_api_CSDI.h"
#include "c8fvp3_hqvdplite_api_HVSRC.h"
#include "c8fvp3_hqvdplite_api_IQI.h"
#include "c8fvp3_hqvdplite_api_TOP_STATUS.h"
#include "c8fvp3_hqvdplite_api_FMD_STATUS.h"
#include "c8fvp3_hqvdplite_api_CSDI_STATUS.h"
#include "c8fvp3_hqvdplite_api_HVSRC_STATUS.h"
#include "c8fvp3_hqvdplite_api_IQI_STATUS.h"

#ifndef HQVDPLITE_API_FOR_STAPI
#define c8fvp3_hqvdplite_api_TOP_BASE_ADDR (0)
#define c8fvp3_hqvdplite_api_VC1RE_BASE_ADDR (c8fvp3_hqvdplite_api_TOP_BASE_ADDR +sizeof(s_TOP))
#define c8fvp3_hqvdplite_api_FMD_BASE_ADDR (c8fvp3_hqvdplite_api_VC1RE_BASE_ADDR +sizeof(s_VC1RE))
#define c8fvp3_hqvdplite_api_CSDI_BASE_ADDR (c8fvp3_hqvdplite_api_FMD_BASE_ADDR +sizeof(s_FMD))
#define c8fvp3_hqvdplite_api_HVSRC_BASE_ADDR (c8fvp3_hqvdplite_api_CSDI_BASE_ADDR +sizeof(s_CSDI))
#define c8fvp3_hqvdplite_api_IQI_BASE_ADDR (c8fvp3_hqvdplite_api_HVSRC_BASE_ADDR +sizeof(s_HVSRC))
#define c8fvp3_hqvdplite_api_TOP_STATUS_BASE_ADDR (c8fvp3_hqvdplite_api_IQI_BASE_ADDR +sizeof(s_IQI))
#define c8fvp3_hqvdplite_api_FMD_STATUS_BASE_ADDR (c8fvp3_hqvdplite_api_TOP_STATUS_BASE_ADDR +sizeof(s_TOP_STATUS))
#define c8fvp3_hqvdplite_api_CSDI_STATUS_BASE_ADDR (c8fvp3_hqvdplite_api_FMD_STATUS_BASE_ADDR +sizeof(s_FMD_STATUS))
#define c8fvp3_hqvdplite_api_HVSRC_STATUS_BASE_ADDR (c8fvp3_hqvdplite_api_CSDI_STATUS_BASE_ADDR +sizeof(s_CSDI_STATUS))
#define c8fvp3_hqvdplite_api_IQI_STATUS_BASE_ADDR (c8fvp3_hqvdplite_api_HVSRC_STATUS_BASE_ADDR +sizeof(s_HVSRC_STATUS))

typedef struct {
  s_TOP TOP;
  s_VC1RE VC1RE;
  s_FMD FMD;
  s_CSDI CSDI;
  s_HVSRC HVSRC;
  s_IQI IQI;
  s_TOP_STATUS TOP_STATUS;
  s_FMD_STATUS FMD_STATUS;
  s_CSDI_STATUS CSDI_STATUS;
  s_HVSRC_STATUS HVSRC_STATUS;
  s_IQI_STATUS IQI_STATUS;
} c8fvp3_hqvdplite_api_struct_t;

#define c8fvp3_hqvdplite_api_COMMAND_OFFSET (0)
#define c8fvp3_hqvdplite_api_COMMAND_SIZE (sizeof(s_TOP) + sizeof(s_VC1RE) + sizeof(s_FMD) + sizeof(s_CSDI) + sizeof(s_HVSRC) + sizeof(s_IQI))
#define c8fvp3_hqvdplite_api_STATUS_OFFSET (c8fvp3_hqvdplite_api_COMMAND_SIZE)
#define c8fvp3_hqvdplite_api_STATUS_SIZE (sizeof(s_TOP_STATUS) + sizeof(s_FMD_STATUS) + sizeof(s_CSDI_STATUS) + sizeof(s_HVSRC_STATUS) + sizeof(s_IQI_STATUS))

#else
#define c8fvp3_hqvdplite_api_TOP_BASE_ADDR (0)
#define c8fvp3_hqvdplite_api_VC1RE_BASE_ADDR (c8fvp3_hqvdplite_api_TOP_BASE_ADDR +sizeof(HQVDPLITE_TOP_Params_t))
#define c8fvp3_hqvdplite_api_FMD_BASE_ADDR (c8fvp3_hqvdplite_api_VC1RE_BASE_ADDR +sizeof(HQVDPLITE_VC1RE_Params_t))
#define c8fvp3_hqvdplite_api_CSDI_BASE_ADDR (c8fvp3_hqvdplite_api_FMD_BASE_ADDR +sizeof(HQVDPLITE_FMD_Params_t))
#define c8fvp3_hqvdplite_api_HVSRC_BASE_ADDR (c8fvp3_hqvdplite_api_CSDI_BASE_ADDR +sizeof(HQVDPLITE_CSDI_Params_t))
#define c8fvp3_hqvdplite_api_IQI_BASE_ADDR (c8fvp3_hqvdplite_api_HVSRC_BASE_ADDR +sizeof(HQVDPLITE_HVSRC_Params_t))
#define c8fvp3_hqvdplite_api_TOP_STATUS_BASE_ADDR (c8fvp3_hqvdplite_api_IQI_BASE_ADDR +sizeof(HQVDPLITE_IQI_Params_t))
#define c8fvp3_hqvdplite_api_FMD_STATUS_BASE_ADDR (c8fvp3_hqvdplite_api_TOP_STATUS_BASE_ADDR +sizeof(HQVDPLITE_TOPStatus_Params_t))
#define c8fvp3_hqvdplite_api_CSDI_STATUS_BASE_ADDR (c8fvp3_hqvdplite_api_FMD_STATUS_BASE_ADDR +sizeof(HQVDPLITE_FMDStatus_Params_t))
#define c8fvp3_hqvdplite_api_HVSRC_STATUS_BASE_ADDR (c8fvp3_hqvdplite_api_CSDI_STATUS_BASE_ADDR +sizeof(HQVDPLITE_CSDIStatus_Params_t))
#define c8fvp3_hqvdplite_api_IQI_STATUS_BASE_ADDR (c8fvp3_hqvdplite_api_HVSRC_STATUS_BASE_ADDR +sizeof(HQVDPLITE_HVSRCStatus_Params_t))

typedef struct {
  HQVDPLITE_TOP_Params_t Top;
  HQVDPLITE_VC1RE_Params_t Vc1re;
  HQVDPLITE_FMD_Params_t Fmd;
  HQVDPLITE_CSDI_Params_t Csdi;
  HQVDPLITE_HVSRC_Params_t Hvsrc;
  HQVDPLITE_IQI_Params_t Iqi;
  HQVDPLITE_TOPStatus_Params_t TopStatus;
  HQVDPLITE_FMDStatus_Params_t FmdStatus;
  HQVDPLITE_CSDIStatus_Params_t CsdiStatus;
  HQVDPLITE_HVSRCStatus_Params_t HvsrcStatus;
  HQVDPLITE_IQIStatus_Params_t IqiStatus;
} HQVDPLITE_CMD_t;

#define HQVDPLITE_COMMAND_OFFSET (0)
#define HQVDPLITE_COMMAND_SIZE (sizeof(HQVDPLITE_TOP_Params_t) + sizeof(HQVDPLITE_VC1RE_Params_t) + sizeof(HQVDPLITE_FMD_Params_t) + sizeof(HQVDPLITE_CSDI_Params_t) + sizeof(HQVDPLITE_HVSRC_Params_t) + sizeof(HQVDPLITE_IQI_Params_t))
#define HQVDPLITE_STATUS_OFFSET (HQVDPLITE_COMMAND_SIZE)
#define HQVDPLITE_STATUS_SIZE (sizeof(HQVDPLITE_TOPStatus_Params_t) + sizeof(HQVDPLITE_FMDStatus_Params_t) + sizeof(HQVDPLITE_CSDIStatus_Params_t) + sizeof(HQVDPLITE_HVSRCStatus_Params_t) + sizeof(HQVDPLITE_IQIStatus_Params_t))

#endif

#endif
